2013-12-02  Tristan Gingold  <gingold@adacore.com>

	* configure.in: Bump version to 2.24
	* Makefile.am (RELEASE): Set.
	* configure, Makefile.in: Regenerate.

2013-11-26  Tristan Gingold  <gingold@adacore.com>

	* configure.in: Bump version to 2.23.92
	* configure: Regenerate.

2013-11-22  Cory Fields  <cory@coryfields.com>

	* libcoff-in.h: Add insert_timestamp flag to the pe_data struct.
	* libcoff.h: Regenerate.
	* peXXigen.c (_bfd_XXi_only_swap_filehdr_out): Only use a real
	timestamp if --insert-timestamp was used.

2013-11-19  Roland McGrath  <mcgrathr@google.com>

	* cgc-nacl.c (nacl_modify_segment_map): Calculate SIZEOF_HEADERS
	when not doing linking (i.e. INFO is a null pointer).

2013-11-18  Tristan Gingold  <gingold@adacore.com>

	* configure.in: Bump version to 2.23.91
	* configure: Regenerate.

2013-11-17  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc64-x86-64.c (x86_64_cgc_howto_table): Add R_X86_64_PC32_BND
	and R_X86_64_PLT32_BND.
	(R_X86_64_standard): Replace R_X86_64_RELATIVE64 with
	R_X86_64_PLT32_BND.
	(IS_X86_64_PCREL_TYPE): Add R_X86_64_PLT32_BND.
	(x86_64_reloc_map): Add BFD_RELOC_X86_64_PC32_BND and
	BFD_RELOC_X86_64_PLT32_BND.
	(cgc_x86_64_check_relocs): Handle R_X86_64_PC32_BND and
	R_X86_64_PLT32_BND.
	(cgc_x86_64_gc_sweep_hook): Likewise.
	(cgc_x86_64_relocate_section): Likewise.
	* reloc.c (bfd_reloc_code_real): Add BFD_RELOC_X86_64_PC32_BND
	and BFD_RELOC_X86_64_PLT32_BND.
	* bfd-in2.h: Regenerated.
	* libbfd.h: Likewise.

2013-11-15  Alan Modra  <amodra@gmail.com>

	Apply changes from mainline to 2.24
	2013-11-11  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (allocate_dynrelocs): Revert 2013-11-04 change.

	2013-11-11  Ulrich Weigand  <uweigand@de.ibm.com>
	* cgc64-ppc.c (ppc64_cgc_edit_toc): Use SYMBOL_REFERENCES_LOCAL
	here, not SYMBOL_CALLS_LOCAL.
	(ppc64_cgc_relocate_section): Likewise.
	(size_global_entry_stubs): Set undefined symbols on their global
	entry stubs here..
	(build_global_entry_stubs): ..rather than here.
	(ppc64_cgc_build_stubs): Don't reset glink->size before calling
	build_global_entry_stubs.

	2013-11-05  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (ppc64_cgc_func_desc_adjust): Make .TOC. defined and
	hidden.
	(ppc64_cgc_set_toc): Adjust.

	2013-11-05  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (struct ppc_link_hash_table): Remove got, plt, relplt,
	iplt, reliplt.  Update all references to use cgc.sgot, cgc.splt,
	cgc.srelplt, cgc.iplt and cgc.irelplt.

	2013-11-04  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (ppc64_cgc_relocate_section): Edit global entry
	prologue to non-PIC in non-PIC executables.

	2013-11-04  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (ppc64_cgc_copy_indirect_symbol): Copy
	pointer_equality_needed flag.
	(ppc64_cgc_check_relocs): For CGCv2 arrange to emit plt
	entries for references to functions in shared libraries on
	non-call relocs.
	(readonly_dynrelocs): Split into function of the same name and..
	(maybe_set_textrel): ..this new function.  Update call.
	(ppc64_cgc_adjust_dynamic_symbol): Don't emit dynrelocs for
	CGCv2 in most cases if we have a plt entry.  Use new
	readonly_relocs.
	(allocate_dynrelocs): For CGCv2, don't allocate dynreloc space
	for ifunc in static executables.
	(size_global_entry_stubs): New function.
	(ppc64_cgc_size_dynamic_sections): Call size_global_entry_stubs.
	Save end of glink branch table.
	(ppc64_cgc_hash_symbol): New function.
	(build_global_entry_stubs): New function.
	(ppc64_cgc_build_stubs): Call build_global_entry_stubs.  Adjust
	glink sizing.
	(ppc64_cgc_relocate_section): Tidy plt16/32/64 reloc code.
	(ppc64_cgc_finish_dynamic_symbol): For CGCv2, adjust symbols
	defined on plt code.

	2013-11-02  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (ppc64_cgc_next_input_section): Always set toc_off
	to value for object file.

	2013-10-30  Alan Modra  <amodra@gmail.com>
	* cgc32-ppc.c (ppc_cgc_size_dynamic_sections): Use new DT_PPC_OPT
	tag to specify tls optimisation.
	* cgc64-ppc.c (ppc64_cgc_size_dynamic_sections): Likewise.
	(ppc64_cgc_finish_dynamic_sections): Specify whether multiple
	toc pointers are used via DT_PPC64_OPT.

	2013-10-30  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (STK_LR, STK_TOC, STK_LINKER): Define.
	(savegpr0_tail, restgpr0_tail, savefpr0_tail, restfpr0_tail)
	build_plt_stub, build_tls_get_addr_stub, ppc_build_one_stub,
	ppc64_cgc_relocate_section): Use new defines.

	2013-10-30  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (PLT_ENTRY_SIZE, PLT_INITIAL_ENTRY_SIZE): Add htab
	parameter and adjust for CGCv2.  Update all uses.
	(PLT_CALL_STUB_SIZE): Delete.
	(ppc64_cgc_get_synthetic_symtab): Support new glink layout.
	(allocate_dynrelocs): Likewise.
	(plt_stub_size, build_plt_stub): Adjust for CGCv2.
	(get_r2off): Return 0 for CGCv2 -R.
	(ppc_build_one_stub, ppc_size_one_stub): Adjust for CGCv2.
	(ppc64_cgc_size_stubs): Likewise.
	(ppc64_cgc_build_stubs): Add new CGCv2 glink.

	2013-10-30  Alan Modra  <amodra@gmail.com>
		    Ulrich Weigand  <uweigand@de.ibm.com>
	* cgc64-ppc.c (struct ppc_stub_hash_entry): Add "other".
	(stub_hash_newfunc): Init new ppc_stub_hash_entry field, and one
	we forgot, "plt_ent".
	(ppc64_cgc_add_symbol_hook): Check CGCv1 objects don't have
	st_other bits only valid in CGCv2.
	(ppc64_cgc_merge_symbol_attribute): New function.
	(ppc_type_of_stub): Add local_off param to test branch range.
	(ppc_build_one_stub): Adjust destinations for CGCv2 locals.
	(ppc_size_one_stub, toc_adjusting_stub_needed): Similarly.
	(ppc64_cgc_size_stubs): Pass local_off to ppc_type_of_stub.
	Set "other" field.
	(ppc64_cgc_relocate_section): Adjust destination for CGCv2 local
	calls.

	2013-10-30  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (abiversion, set_abiversion): New functions.
	(ppc64_cgc_get_synthetic_symtab): Handle CGCv2 objects without .opd.
	(struct ppc_link_hash_table): Add opd_abi.
	(ppc64_cgc_check_relocs): Check no .opd with CGCv2.
	(ppc64_cgc_merge_private_bfd_data): New function.
	(ppc64_cgc_print_private_bfd_data): New function.
	(ppc64_cgc_tls_setup): Set htab->opd_abi.
	(ppc64_cgc_size_dynamic_sections): Don't emit OPD related dynamic
	tags for CGCv2.
	(ppc_build_one_stub): Use R_PPC64_IRELATIVE for CGCv2 ifunc.
	(ppc64_cgc_finish_dynamic_symbol): Likewise

	2013-10-30  Alan Modra  <amodra@gmail.com>
	* cgc64-ppc.c (build_plt_stub): Switch stubs to use r11 as base
	reg and r12 as destination.
	(ppc_build_one_stub): Likewise.
	(ppc64_cgc_build_stubs): Likewise for glink.

	2013-10-30  Alan Modra  <amodra@gmail.com>
	* reloc.c (BFD_RELOC_PPC64_ADDR16_HIGH, BFD_RELOC_PPC64_ADDR16_HIGHA,
	BFD_RELOC_PPC64_TPREL16_HIGH, BFD_RELOC_PPC64_TPREL16_HIGHA,
	BFD_RELOC_PPC64_DTPREL16_HIGH, BFD_RELOC_PPC64_DTPREL16_HIGHA): New.
	* cgc64-ppc.c (ppc64_cgc_howto_raw): Add entries for new relocs.
	Make all _HA and _HI relocs report signed overflow.
	(ppc64_cgc_reloc_type_lookup): Handle new relocs.
	(must_be_dyn_reloc, ppc64_cgc_check_relocs): Likewise.
	(dec_dynrel_count, ppc64_cgc_relocate_section): Likewise.
	(ppc64_cgc_relocate_section): Don't apply 0x8000 adjust to
	R_PPC64_TPREL16_HIGHER, R_PPC64_TPREL16_HIGHEST,
	R_PPC64_DTPREL16_HIGHER, and R_PPC64_DTPREL16_HIGHEST.
	* libbfd.h: Regenerate.
	* bfd-in2.h: Regenerate.

2013-11-13  Yufeng Zhang  <yufeng.zhang@arm.com>

	* cgcnn-aarch64.c (cgcNN_aarch64_howto_table): Use
	R_AARCH64_TLS_DTPMOD64 instead of R_AARCH64_TLS_DTPMOD;
	likewise for R_AARCH64_TLS_DTPREL and R_AARCH64_TLS_TPREL.

2013-11-12  Matthew Leach  <Matthew.Leach@arm.comm>

	* cgcxx-aarch64.c (_bfd_aarch64_cgc_grok_prstatus): Fix hard-coded
	size of struct cgc_prstatus.

2013-11-07  Roland McGrath  <mcgrathr@google.com>

	* archures.c (bfd_mach_i386_nacl): Fix definition so it doesn't
	collide with bfd_mach_l1om.
	* bfd-in2.h: Regenerate.

	* cgc32-i386.c (cgc32_i386_nacl_cgc_object_p): New function.
	(cgc_backend_object_p): Use that in cgc32-i386-nacl definition.
	* cgc64-x86-64.c (cgc64_x86_64_nacl_cgc_object_p): New function.
	(cgc_backend_object_p): Use that in cgc64-x86-64-nacl definition.
	(cgc32_x86_64_nacl_cgc_object_p): New function.
	(cgc_backend_object_p): Use that in cgc32-x86-64-nacl definition.

2013-11-01  Roland McGrath  <mcgrathr@google.com>

	* cgc-nacl.c (segment_eligible_for_headers): Drop requirement that
	some section have SEC_HAS_CONTENTS set.  It's not set for
	.note.gnu.build-id, and a segment of only read-only SHT_NOBITS
	sections is implausible and not really supportable anyway.

2013-10-29  Roland McGrath  <mcgrathr@google.com>

	* cgc64-x86-64.c (cgc_x86_64_nacl_plt0_entry): Correct 9-byte nop
	sequence to match what the assembler generates.

2013-10-17  Alan Modra  <amodra@gmail.com>

	PR 16056
	* cgc.c (copy_cgc_program_header): Only consider SEC_ALLOC sections
	when finding lowest_section.

2013-10-09  Roland McGrath  <mcgrathr@google.com>

	* cgc64-alpha.c (cgc64_alpha_relax_tls_get_addr): Cast switch
	expression to int to silence over-eager compiler warnings.

2013-10-09  Roland McGrath  <mcgrathr@google.com>

	* xcofflink.c (_bfd_xcoff_bfd_final_link): Don't touch EREL in
	loop that doesn't use (or initialize) it.

2013-10-09  Roland McGrath  <mcgrathr@google.com>

	* cgcxx-tilegx.c (tilegx32_plt_tail_entry, tilegx32_plt_tail_entry):
	Move second const qualifier so it applies to the pointer.

2013-10-05  Gregory Fong  <gregory.0xf0@gmail.com>

	* cgcxx-mips.c (mips_cgc_create_got_section): Hide
	_GLOBAL_OFFSET_TABLE_.

2013-10-04  Will Newton  <will.newton@linaro.org>

	* configure: Regenerate.
	* configure.in: Build cgc-ifunc.o for AArch64.
	* cgcnn-aarch64.c: Include objalloc.h.
	(cgcNN_aarch64_local_htab_hash): New function.
	(cgcNN_aarch64_local_htab_eq): New function.
	(cgcNN_aarch64_get_local_sym_hash): New function.
	(cgcNN_aarch64_link_hash_table_create): Initialize local STT_GNU_IFUNC
	symbol hash.
	(cgcNN_aarch64_hash_table_free): Free local STT_GNU_IFUNC symbol hash.
	(cgcNN_aarch64_final_link_relocate): Add sym argument.  Add support
	for handling STT_GNU_IFUNC symbols.
	(cgcNN_aarch64_gc_sweep_hook): Add support for garbage collecting
	references to STT_GNU_IFUNC symbols.
	(cgcNN_aarch64_adjust_dynamic_symbol): Add support for handling
	STT_GNU_IFUNC symbols.
	(cgcNN_aarch64_check_relocs): Add support for handling STT_GNU_IFUNC
	symbols.  Ensure we don't increase plt.refcount from -1 to 0.
	(cgcNN_aarch64_post_process_headers): Call _bfd_cgc_set_osabi.
	(cgcNN_aarch64_is_function_type): Remove function.
	(cgcNN_aarch64_allocate_dynrelocs): Handle STT_GNU_IFUNC symbols.
	(cgcNN_aarch64_allocate_ifunc_dynrelocs): New function.
	(cgcNN_aarch64_allocate_local_dynrelocs): New function.
	(cgcNN_aarch64_allocate_local_ifunc_dynrelocs): New function.
	(cgcNN_aarch64_size_dynamic_sections): Call
	cgcNN_aarch64_allocate_local_dynrelocs.
	(cgcNN_aarch64_create_small_pltn_entry): Add info argument.
	Add support for creating .iplt entries for STT_GNU_IFUNC symbols.
	(cgcNN_aarch64_finish_dynamic_symbol): Add support for handling
	STT_GNU_IFUNC symbols and .iplt.
	(cgcNN_aarch64_finish_local_dynamic_symbol): New function.
	(cgcNN_aarch64_finish_dynamic_sections): Call
	cgcNN_aarch64_finish_local_dynamic_symbol.

2013-09-24  Alan Modra  <amodra@gmail.com>

	* cgc32-mips.c (CGC_OSABI): Undef for vxworks.

2013-09-20  Alan Modra  <amodra@gmail.com>

	* configure: Regenerate.

2013-09-18  Tristan Gingold  <gingold@adacore.com>

	* configure.in: Bump version to 2.23.90
	* configure: Regenerate.

2013-09-17  Doug Gilmore  <Doug.Gilmore@imgtec.com>

	* cgcxx-mips.c (_bfd_mips_cgc_print_private_bfd_data): Handle
	EF_MIPS_FP64.

2013-08-31  John David Anglin  <dave.anglin@bell.net>

	* cgc64-hppa.c (cgc_hppa_final_link_relocate): Add missing '%' to
	format string.

2013-08-29  Jakub Jelinek  <jakub@redhat.com>

	* cgc64-x86-64.c (cgc_x86_64_check_tls_transition): Allow
	64-bit -mcmodel=large -fpic TLS GD and LD sequences.
	(cgc_x86_64_relocate_section): Handle -mcmodel=large -fpic
	TLS GD and LD sequences in GD->LE, GD->IE and LD->LE transitions.

2013-08-27  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct cgc_backend_data): Remove as_needed_cleanup.
	Add notice_as_needed.
	* cgc64-ppc.c (cgc_backend_as_needed_cleanup): Don't define.
	(cgc_backend_notice_as_needed): Define.
	(ppc64_cgc_as_needed_cleanup): Rename and adjust..
	(ppc64_cgc_notice_as_needed): ..to this.
	* cgclink.c (_bfd_cgc_notice_as_needed): New function, extracted..
	(cgc_link_add_object_symbols): ..from here.
	* cgcxx-target.h (cgc_backend_as_needed_cleanup): Don't define.
	(cgc_backend_notice_as_needed): Define..
	(cgcNN_bed): ..and use here.

2013-08-26  Roland McGrath  <mcgrathr@google.com>

	* archures.c (bfd_mach_i386_nacl, bfd_mach_i386_i386_nacl): New macros.
	(bfd_mach_x86_64_nacl, bfd_mach_x64_32_nacl): New macros.
	* cpu-i386.c (bfd_arch_i386_onebyte_nop_fill): New function.
	(bfd_i386_nacl_arch): New variable.
	(bfd_x86_64_nacl_arch, bfd_x64_32_nacl_arch): New variables.
	(bfd_x64_32_arch_intel_syntax): Link them into the list.
	* bfd-in2.h: Regenerate.

2013-08-26  Roland McGrath  <mcgrathr@google.com>

	* cgc-nacl.c (nacl_modify_segment_map): Fix logic reordering the
	cgc_segment_map list.  If an executable segment is page-aligned
	but does not end with a full page, then append a fake section into
	the segment map entry that pads out the page.
	(nacl_final_write_processing): New function.  Write the code fill
	laid out in nacl_modify_segment_map.
	* cgc-nacl.h: Declare it.
	* cgc32-arm.c (cgc32_arm_nacl_final_write_processing): New function.
	(cgc_backend_final_write_processing): Define it for NaCl backend.
	* cgc32-i386.c (cgc_backend_final_write_processing): Likewise.
	* cgc64-x86-64.c (cgc_backend_final_write_processing): Likewise.

	* cgc-nacl.c (segment_eligible_for_headers): Rename MAXPAGESIZE
	parameter to MINPAGESIZE.
	(nacl_modify_segment_map): Use minpagesize instead of maxpagesize.

	* cgc32-arm.c (CGC_MINPAGESIZE, CGC_COMMONPAGESIZE): #undef for NaCl.

2013-08-24  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-tilepro.c (tilepro_cgc_finish_dynamic_sections): Don't
	set GOT's entry size if there is no CGC section data.
	* cgc64-s390.c (cgc_s390_finish_dynamic_sections): Likewise.
	* cgcxx-sparc.c (_bfd_sparc_cgc_finish_dynamic_sections):
	Likewise.

2013-08-23  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc64-x86-64.c (get_cgc_x86_64_arch_data): New.
	(get_cgc_x86_64_backend_data): Use it.
	(cgc_x86_64_size_dynamic_sections): Likewise.

2013-08-23  Yuri Chornoivan  <yurchor@ukr.net>

	PR binutils/15834
	* bfdio.c: Fix typos.
	* cgc32-spu.c: Likewise.
	* cgcnn-aarch64.c: Likewise.

2013-08-21  Tristan Gingold  <gingold@adacore.com>

	* coff-rs6000.c (_bfd_xcoff_sizeof_headers): Also count
	.ovrflo sections.
	* coffcode.h (coff_compute_section_file_positions): Force
	match between file offset and vma offset.

2013-08-21  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_merge_symbol): Set *poldbfd, *poldweak,
	and *poldalignment before exiting when !relocs_compatible.

2013-08-21  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_define_linkage_sym): Don't set STV_INTERNAL
	symbols to STV_HIDDEN.

2013-08-14  John Tytgat  <john@bass-software.com>

	PR ld/15787
	* cgc32-arm.c (cgc32_arm_final_link_relocate): Use origin of output
	segment containing the relocating symbol instead of assuming 0 for
	sb group relocations.

2013-08-09  Nick Clifton  <nickc@redhat.com>

	* cgc32-rl78.c (rl78_cgc_merge_private_bfd_data): Complain if G10
	flag bits do not match.
	(rl78_cgc_print_private_bfd_data): Describe G10 flag.

2013-08-05  John Tytgat  <john@bass-software.com>

	* po/BLD-POTFILES.in: Regenerate.
	* po/SRC-POTFILES.in: Likewise.

2013-07-31  John Tytgat  <john@bass-software.com>

	PR ld/15787
	* cgc32-arm.c (cgc32_arm_final_link_relocate): Base SB on the
	output section VMA.

2013-07-28  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc64-hppa.c (cgc64_hppa_finish_dynamic_sections)
	<DT_HP_LOAD_MAP>: Return unsuccessfully if there's no `.data'
	section.

2013-07-27  Andrew Pinski  <apinski@cavium.com>

	* cgcnn-aarch64.c (cgcNN_aarch64_check_relocs):
	Use the correct alignment for
	_bfd_cgc_make_dynamic_reloc_section for ILP32.

2013-07-27  Andrew Pinski  <apinski@cavium.com>

	* cgcnn-aarch64.c (cgcNN_aarch64_howto_from_bfd_reloc): Handle
	BFD_RELOC_AARCH64_NONE explicitly.

2013-07-27  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-vax.c (cgc_vax_finish_dynamic_sections): Don't set GOT's
	entry size if there is no CGC section data.

2013-07-27  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-vax.c (cgc_vax_check_relocs) <R_VAX_GOT32, R_VAX_PLT32>:
	Don't check symbol visibility here.  Remove a check already
	asserted for.
	(cgc_vax_instantiate_got_entries): Use SYMBOL_REFERENCES_LOCAL
	instead of individual checks.
	(cgc_vax_relocate_section) <R_VAX_GOT32, R_VAX_PLT32>: Only
	check the offset to decide if produce a GOT or PLT entry.
	Remove redundant assertions.  Remove code to produce GOT entries
	for local symbols.  Remove a duplicate comment and add a comment
	on GOT relocations.
	(cgc_vax_finish_dynamic_symbol): Remove code to produce RELATIVE
	dynamic relocs.

2013-07-27  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-vax.c (cgc_vax_always_size_sections): Correct a comment
	typo.

2013-07-27  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-vax.c (cgc_vax_discard_got_entries): New function.
	(cgc_vax_always_size_sections): Likewise.
	(cgc_vax_size_dynamic_sections): Remove code moved to
	cgc_vax_always_size_sections.  Make comment on
	cgc_vax_instantiate_got_entries match reality.
	(cgc_vax_instantiate_got_entries): Assert that rather than check
	if dynobj is null.  Don't check for dynamic_sections_created.
	Make function description match reality.
	(cgc_backend_always_size_sections): New macro.

2013-07-25  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (struct ppc64_cgc_obj_tdata): Replace opd_relocs
	with a union.
	(opd_entry_value): Cache .opd section contents.
	(ppc64_cgc_relocate_section): Adjust.

2013-07-25  Alan Modra  <amodra@gmail.com>

	PR ld/15762
	PR ld/12761
	* cgclink.c (cgc_link_add_object_symbols): Correct test in
	last patch.  Remove unnecessary code.

2013-07-24  Tristan Gingold  <gingold@adacore.com>

	* coff-rs6000.c (xcoff_howto_table): Fix masks and pc_relative for
	R_RBR.  Add numbers in comments.
	(_bfd_xcoff_reloc_type_lookup): Handle BFD_RELOC_PPC_B16.
	* coff64-rs6000.c: Likewise.

2013-07-20  Alan Modra  <amodra@gmail.com>

	PR ld/15762
	PR ld/12761
	* cgclink.c (cgc_link_add_object_symbols): Don't clobber
	.gnu.warning.symbol sections when shared.

2013-07-19  Nick Clifton  <nickc@redhat.com>

	* cgc32-rx.c (rx_cgc_relocate_section): Fix typo: move
	saw_subtract from R_RX_OPdiv to R_RX_OPneg.

2013-07-18  Travis Snoozy  <quandary@remstate.com>

	PR ld/15721
	* cgc32-msp430.c (R_MSP430_10_PCREL): Use 10-bit source and
	destination masks.
	* R_MSP430_2X_PCREL: Likewise.
	* R_MSP430X_10_PCREL: Likewise.
	* R_MSP430X_2X_PCREL: Likewise.

2013-07-18  Terry Guo  <terry.guo@arm.com>

	* cgc32-arm.c (arm_type_of_stub): Don't use ST_BRANCH_TO_ARM for
	thumb only targets.
	(cgc32_arm_final_link_relocate): Likewise.

2013-07-18  Bill Neubauer  <wcn@google.com>

	* mach-o.c (mach_o_section_name_xlat dw): Add entry for
	.debug_gdb_scripts

2013-07-18  Roland McGrath  <mcgrathr@google.com>

	* cgc32-arm.c (cgc32_arm_stub_long_branch_arm_nacl): New variable.
	(cgc32_arm_stub_long_branch_arm_nacl_pic): New variable.
	(arm_build_one_stub): Increase MAXRELOCS to 3.
	(arm_type_of_stub): Use them if GLOBALS->nacl_p.
	(struct cgc32_arm_link_hash_table): Give add_stub_section member's
	pointee type a third argument.
	(cgc32_arm_create_or_find_stub_sec): Update caller.
	(cgc32_arm_size_stubs): Update argument type.
	* bfd-in.h (cgc32_arm_size_stubs): Update decl.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

2013-07-15  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgcxx-mips.c (mips_cgc_merge_obj_attributes): Replace hardcoded
	magic numbers with enum values.

2013-07-12  Roland McGrath  <mcgrathr@google.com>

	* reloc.c: Add BFD_RELOC_390_PC12DBL, BFD_RELOC_390_PLT12DBL,
	BFD_RELOC_390_PC24DBL, BFD_RELOC_390_PLT24DBL (should have
	been added here with 2013-07-05 cgc32-s390.c change).
	* bfd-in2.h: Regenerate (no-op).
	* libbfd.h: Regenerate (no-op).

2013-07-12  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgcxx-mips.c (_bfd_mips_cgc_merge_private_bfd_data): Handle
	EF_MIPS_NAN2008.
	(_bfd_mips_cgc_print_private_bfd_data): Likewise.

2013-07-09  Tristan Gingold  <gingold@adacore.com>

	* vms-alpha.c (struct vms_private_data_struct): Remove
	flag_hash_long_names and flag_show_after_trunc.
	(hash_string): Remove.
	(_bfd_vms_length_hash_symbol): Remove.
	(alpha_vms_write_exec): Remove call to _bfd_vms_length_hash_symbol.
	(_bfd_vms_write_egsd): Likewise.  Rewrite condition.
	(_bfd_vms_write_ehdr): Remove code that set removed flags.
	(_bfd_vms_write_etir): Remove call to _bfd_vms_length_hash_symbol.
	(vms_bfd_is_local_label_name): Remove trace call.

2013-07-09  Tristan Gingold  <gingold@adacore.com>

	* hosts/alphavms.h: Include config.h and ansidecl.h, remove useless
	macros.
	* configure.com: Adjust to match changes in configure.
	* makefile.vms (OBJS): Update list.

2013-07-05  Tristan Gingold  <gingold@adacore.com>

	* coffcode.h (coff_write_object_contents): Use ".ovrflo" name for
	overflow sections.

2013-07-05  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* cgc32-s390.c: Add new relocation definitions R_390_PC12DBL,
	R_390_PLT12DBL, R_390_PC24DBL, and R_390_PLT24DBL.
	(cgc_s390_reloc_type_lookup, cgc_s390_check_relocs)
	(cgc_s390_gc_sweep_hook, cgc_s390_relocate_section): Support new
	relocations.
	* cgc64-s390.c: See cgc32-s390.c
	* bfd-in2.h: Add new relocs to enum bfd_reloc_code_real.
	* libbfd.h: Add new reloc strings.

2013-07-03  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* cgcnn-aarch64.c (cgcNN_aarch64_final_link_relocate): Reorder case
	values.
	(cgcNN_aarch64_relocate_section): Likewise.
	(cgcNN_aarch64_gc_sweep_hook): Likewise.
	(cgcNN_aarch64_check_relocs): Likewise.

2013-07-03  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (ppc64_cgc_func_desc_adjust): Don't hide .TOC.
	when relocatable.  Don't change root.type or type here.
	(ppc64_cgc_set_toc): Set type of .TOC. to STT_OBJECT.

2013-07-03  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (struct ppc_stub_hash_entry): Delete "addend".
	(ppc64_cgc_size_stubs): Don't set "addend".
	(ppc64_cgc_relocate_section): Don't allow calls via
	toc-adjusting stubs without a following nop even in an
	executable, except for self-calls and both libc_start_main
	and .libc_start_main.

2013-07-03  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (ppc64_cgc_func_desc_adjust): Hide ".TOC.".

2013-07-02  Tristan Gingold  <gingold@adacore.com>

	* coff-rs6000.c (xcoff_find_nearest_line_discriminator): Add missing
	line.

2013-07-02  Tristan Gingold  <gingold@adacore.com>

	* vms-alpha.c (_bfd_generic_find_nearest_line_discriminator): Define.
	(_bfd_vms_find_nearest_line_discriminator): New function.

2013-07-02  Tristan Gingold  <gingold@adacore.com>

	* coff-rs6000.c (xcoff_create_csect_from_smclas): Handle more smclas.

2013-07-02  Tristan Gingold  <gingold@adacore.com>

	* coff-rs6000.c (xcoff_find_nearest_line_discriminator): New function.
	(rs6000coff_vec): Reference it.

2013-07-02  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* cgcnn-aarch64.c (aarch64_cgc_create_got_section): New.
	(cgcNN_aarch64_check_relocs): Use aarch64_cgc_create_got_section.
	(cgcNN_aarch64_create_dynamic_sections): Do not define
	_GLOBAL_OFFSET_TABLE_; call aarch64_cgc_create_got_section.

2013-07-02  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* ld-aarch64/emit-relocs-309-low.d: Adjust .text address.
	* ld-aarch64/emit-relocs-309-up.d: Adjust .got address.
	* ld-aarch64/emit-relocs-312.d: Adjust offsets into .got.
	* ld-aarch64/tls-relax-all.d: Likewise.
	* ld-aarch64/gc-got-relocs.d: Adjust expected .got content.
	* ld-aarch64/gc-tls-relocs.d: Likewise.
	* ld-aarch64/tls-relax-gd-ie.d: Likewise.
	* ld-aarch64/tls-relax-gdesc-ie-2.d: Likewise.
	* ld-aarch64/tls-relax-gdesc-ie.d: Likewise.

2013-07-02  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (ppc64_cgc_relocate_section): Set "relocation" for
	.TOC. after relocatable check.

2013-07-01  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.h (ppc64_cgc_toc): Delete.
	(ppc64_cgc_set_toc): Declare.
	* cgc64-ppc.c (ppc64_cgc_toc_reloc): Replace call to ppc64_cgc_toc
	with call the ppc64_cgc_set_toc.
	(ppc64_cgc_toc_ha_reloc, ppc64_cgc_toc64_reloc): Likewise.
	(ppc64_cgc_start_multitoc_partition): Likewise.
	(struct ppc_link_hash_table): Delete dot_toc_dot.  Replace all uses
	with cgc.hgot.
	(ppc64_cgc_process_dot_syms): Don't make a fake function descriptor
	for ".TOC.".
	(ppc64_cgc_check_relocs): Mark sections with a reference to .TOC.
	as needing a toc pointer.
	(ppc64_cgc_size_stubs): Don't set dot_toc_dot here.
	(ppc64_cgc_set_toc): Rename from ppc64_cgc_toc.  Add info param.
	Set cgc.hgot value.

2013-06-28  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15685
	* cgc64-x86-64.c (cgc_x86_64_relocate_section): Handle
	R_X86_64_DTPOFF64.

2013-06-28  Nick Clifton  <nickc@redhat.com>

	PR ld/15302
	* cgc32-arm.c (allocate_dynrelocs_for_symbol): Revert previous patch.

2013-06-27  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* cgcnn-aarch64.c (cgcNN_aarch64_check_relocs): Reserve one slot
	in sgot.
	(cgcNN_aarch64_finish_dynamic_sections): Place the &_DYNAMIC reference
	in sgot[0] rather than sgotplt[0].

2013-06-26  Yufeng Zhang  <yufeng.zhang@arm.com>

	* Makefile.am (cgc32-aarch64.c): Add a #line cpp directive at the
	beginning of the generated file.
	(cgc64-aarch64.c): Likewise.
	* Makefile.in: Re-generated.

2013-06-26  Yufeng Zhang  <yufeng.zhang@arm.com>

	* Makefile.am (BFD64_BACKENDS): Add cgcxx-aarch64.c.
	(BFD64_BACKENDS_CFILES): Add cgcxx-aarch64.lo.
	* Makefile.in: Re-generated.
	* configure.in (bfd_cgc64_bigaarch64_vec): Add cgcxx-aarch64.lo.
	(bfd_cgc64_littleaarch64_vec): Likewise.
	(bfd_cgc32_bigaarch64_vec): Likewise.
	(bfd_cgc32_littleaarch64_vec): Likewise.
	* configure: Re-generated.
	* cgcxx-aarch64.c: New file; split from cgc64-aarch64.c.
	* cgcxx-aarch64.h: New file.
	* cgcnn-aarch64.c: Include "cgcxx-aarch64.h"; move the following
	stuff to cgcxx-aarch64.c.
	(bfd_cgc_aarch64_put_addend): Removed.
	(PG_OFFSET, PG): Likewise.
	(cgcNN_aarch64_small_plt0_entry): Support CGC32.
	(cgcNN_aarch64_tlsdesc_small_plt_entry): Likewise.
	(cgc64_aarch64_grok_prstatus): Removed.
	(cgc_backend_grok_prstatus): Removed.
	(insn32): Likewise.
	(aarch64_unsigned_overflow): Likewise.
	(aarch64_signed_overflow): Likewise.
	(aarch64_resolve_relocation): Likewise.
	(MASK): Likewise.
	(decode_branch_ofs_26): Likewise.
	(decode_cond_branch_ofs_19): Likewise.
	(decode_ld_lit_ofs_19): Likewise.
	(decode_tst_branch_ofs_14): Likewise.
	(decode_movw_imm): Likewise.
	(decode_adr_imm): Likewise.
	(decode_add_imm): Likewise.
	(reencode_branch_ofs_26): Likewise.
	(reencode_cond_branch_ofs_19): Likewise.
	(reencode_ld_lit_ofs_19): Likewise.
	(reencode_tst_branch_ofs_14): Likewise.
	(reencode_movw_imm): Likewise.
	(reencode_adr_imm): Likewise.
	(reencode_ldst_pos_imm): Likewise.
	(reencode_add_imm): Likewise.
	(reencode_movzn_to_movz): Likewise.
	(reencode_movzn_to_movn): Likewise.
	(aarch64_relocate): Update to call the new function names in
	cgcxx-aarch64.c.
	(aarch64_calculate_got_entry_vma): Likewise.
	(cgcNN_aarch64_final_link_relocate): Likewise.
	(cgc64_aarch64_update_plt_entry): Likewise; change the type of the
	parameter 'r_type' to bfd_reloc_code_real_type; rename to ...
	(cgc_aarch64_update_plt_entry): ... this.
	(cgcNN_aarch64_create_small_pltn_entry): Update.
	(cgcNN_aarch64_init_small_plt0_entry): Remove plt_got_base; add
	bfd_vma plt_got_2nd_ent; update to call cgc_aarch64_update_plt_entry.
	(cgcNN_aarch64_finish_dynamic_sections): Add plt_entry; update to
	call cgc_aarch64_update_plt_entry.

2013-06-26  Yufeng Zhang  <yufeng.zhang@arm.com>

	* bfd-in2.h: Re-generated.
	* cgcnn-aarch64.c (HOWTO64, HOWTO32): New define.
	(IS_AARCH64_TLS_RELOC): Change to be based on the
	bfd reloc enumerators.
	(IS_AARCH64_TLSDESC_RELOC): Likewise.
	(PG, PG_OFFSET): Cast literal to bfd_vma.
	(cgc64_aarch64_howto_table): Removed.
	(cgc64_aarch64_howto_dynrelocs): Removed.
	(cgc64_aarch64_tls_howto_table): Removed.
	(cgc64_aarch64_tlsdesc_howto_table): Removed.
	(cgcNN_aarch64_howto_table): New table to host all howto entires..
	(R_AARCH64_*): Replaced by AARCH64_R (*) and AARCH64_R_STR (*).
	(cgcNN_aarch64_bfd_reloc_from_howto): New function.
	(cgcNN_aarch64_bfd_reloc_from_type): Ditto.
	(struct cgc_aarch64_reloc_map): New.
	(cgc_aarch64_reloc_map): New table.
	(cgcNN_aarch64_howto_from_bfd_reloc): New function.
	(cgcNN_aarch64_howto_from_type): Update to look up the new table
	cgcNN_aarch64_howto_table.
	(struct cgc64_aarch64_reloc_map): Remove.
	(cgc64_aarch64_reloc_map): Remove.
	(cgcNN_aarch64_reloc_type_lookup): Change to call
	cgcNN_aarch64_howto_from_bfd_reloc.
	(cgcNN_aarch64_reloc_name_lookup): Change to look up the new table
	cgcNN_aarch64_howto_table.
	(aarch64_resolve_relocation): Refactor to switch on the bfd
	reloc enumerators.
	(bfd_cgc_aarch64_put_addend): Likewise.
	(cgcNN_aarch64_final_link_relocate): Likewise.
	(aarch64_tls_transition_without_check): Likewise.
	(aarch64_reloc_got_type): Likewise.
	(aarch64_can_relax_tls): Likewise.
	(aarch64_tls_transition): Likewise.
	(cgcNN_aarch64_tls_relax): Likewise.
	(cgcNN_aarch64_final_link_relocate): Likewise.
	(cgcNN_aarch64_relocate_section): Likewise.
	(cgcNN_aarch64_gc_sweep_hook): Likewise.
	(cgcNN_aarch64_check_relocs): Likewise.
	(aarch64_tls_transition): Change to return a bfd reloc enumerator.
	* libbfd.h: Re-generated.
	* reloc.c: Re-order the AArch64 bfd reloc enumerators.
	(BFD_RELOC_AARCH64_RELOC_START)
	(BFD_RELOC_AARCH64_RELOC_END)
	(BFD_RELOC_AARCH64_LD_GOT_LO12_NC)
	(BFD_RELOC_AARCH64_LD32_GOT_LO12_NC)
	(BFD_RELOC_AARCH64_TLSDESC_LD_LO12_NC)
	(BFD_RELOC_AARCH64_TLSDESC_LD32_LO12_NC)
	(BFD_RELOC_AARCH64_TLSIE_LD_GOTTPREL_LO12_NC)
	(BFD_RELOC_AARCH64_TLSIE_LD32_GOTTPREL_LO12_NC)
	(BFD_RELOC_AARCH64_IRELATIVE): New relocs.

2013-06-26  Yufeng Zhang  <yufeng.zhang@arm.com>

	* Makefile.am (BFD64_BACKENDS): Add cgc32-aarch64.lo.
	(BUILD_CFILES): Add cgc32-aarch64.c.
	(cgc32-aarch64.c): New rule for generating from cgcnn-aarch64.c.
	* Makefile.in: Re-generated.
	* archures.c (bfd_mach_aarch64_ilp32): New define.
	* bfd-in.h (bfd_cgc32_aarch64_init_maps): New declaration.
	(bfd_cgc32_aarch64_set_options): Ditto.
	(cgc32_aarch64_setup_section_lists): Ditto.
	(cgc32_aarch64_next_input_section): Ditto.
	(cgc32_aarch64_size_stubs): Ditto.
	(cgc32_aarch64_build_stubs): Ditto.
	* bfd-in2.h: Re-generated.
	* config.bfd (aarch64-*-cgc): Add bfd_cgc32_littleaarch64_vec
	and bfd_cgc32_bigaarch64_vec.
	(aarch64-*-linux*): Likewise.
	(aarch64_be-*-cgc): Likewise.
	(aarch64_be-*-linux*): Likewise.
	* configure.in (bfd_cgc32_bigaarch64_vec)
	(bfd_cgc32_littleaarch64_vec): New.
	* configure: Re-generated.
	* cpu-aarch64.c (compatible): Don't allow mixing ilp32 objects with
	lp64 ones.
	(bfd_aarch64_arch_ilp32): New.
	(bfd_aarch64_arch): Link to bfd_aarch64_arch_ilp32.
	* cgcnn-aarch64.c (ARCH_SIZE): New define.
	(AARCH64_R, AARCH64_R_STR, LOG_FILE_ALIGN): New defines.
	(GOT_ENTRY_SIZE): Re-define as (ARCH_SIZE / 8).
	(cgc64_aarch64_*): Rename to cgcNN_aarch64_*.
	(CGC64_R_*): Rename to CGCNN_R_*.
	Plus other paramaterization.
	* targets.c (bfd_cgc32_bigaarch64_vec, bfd_cgc32_littleaarch64_vec):
	New declarations.
	(_bfd_target_vector): Add bfd_cgc32_bigaarch64_vec and
	bfd_cgc32_littleaarch64_vec.

2013-06-26  Yufeng Zhang  <yufeng.zhang@arm.com>

	* Makefile.am (BFD64_BACKENDS_CFILES): Remove cgc64-aarch64.c.
	(BUILD_CFILES): Add cgc64-aarch64.c.
	(cgc64-aarch64.c): New rule for generating from cgcnn-aarch64.c.
	* Makefile.in: Re-generated.
	* cgc64-aarch64.c: Rename to ...
	* cgcnn-aarch64.c: ... this.

2013-06-25  Maciej W. Rozycki  <macro@codesourcery.com>
            Paul Brook  <paul@codesourcery.com>

	* cgcxx-mips.h (_bfd_mips_cgc_insn32): New prototype.
	* cgcxx-mips.c (mips_cgc_link_hash_table): Add insn32 member.
	(STUB_MOVE32_MICROMIPS, STUB_JALR32_MICROMIPS): New macros.
	(MICROMIPS_INSN32_FUNCTION_STUB_NORMAL_SIZE): Likewise.
	(MICROMIPS_INSN32_FUNCTION_STUB_BIG_SIZE): Likewise.
	(micromips_insn32_o32_exec_plt0_entry): New variable.
	(micromips_insn32_o32_exec_plt_entry): Likewise.
	(_bfd_mips_cgc_adjust_dynamic_symbol): Handle insn32 mode.
	(mips_cgc_estimate_stub_size): Likewise.
	(_bfd_mips_cgc_size_dynamic_sections): Likewise.
	(_bfd_mips_cgc_finish_dynamic_symbol): Likewise.
	(mips_finish_exec_plt): Likewise.
	(_bfd_mips_cgc_relax_section): Likewise.
	(_bfd_mips_cgc_insn32): New function.
	(_bfd_mips_cgc_get_synthetic_symtab): Handle insn32 PLT.

2013-06-24  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgcxx-mips.h (_bfd_mips_cgc_get_synthetic_symtab): New
	prototype.
	* cgc32-mips.c (cgc_backend_plt_sym_val): Remove macro.
	(bfd_cgc32_get_synthetic_symtab): New macro.
	* cgcxx-mips.c (plt_entry): New structure.
	(mips_cgc_link_hash_entry): Add use_plt_entry member.
	(mips_cgc_link_hash_table): Rename plt_entry_size member to
	plt_mips_entry_size.  Add plt_comp_entry_size, plt_mips_offset,
	plt_comp_offset, plt_got_index entries and plt_header_is_comp
	members.
	(STUB_LW_MICROMIPS, STUB_MOVE_MICROMIPS): New macros.
	(STUB_LUI_MICROMIPS, STUB_JALR_MICROMIPS): Likewise.
	(STUB_ORI_MICROMIPS, STUB_LI16U_MICROMIPS): Likewise.
	(STUB_LI16S_MICROMIPS): Likewise.
	(MICROMIPS_FUNCTION_STUB_NORMAL_SIZE): Likewise.
	(MICROMIPS_FUNCTION_STUB_BIG_SIZE): Likewise.
	(micromips_o32_exec_plt0_entry): New variable.
	(mips16_o32_exec_plt_entry): Likewise.
	(micromips_o32_exec_plt_entry): Likewise.
	(mips_cgc_link_hash_newfunc): Initialize use_plt_entry.
	(mips_cgc_output_extsym): Update to use gotplt_union's plist
	member rather than offset.
	(mips_cgc_gotplt_index): Likewise.  Remove the VxWorks
	restriction.  Use MIPS_CGC_GOT_SIZE to calculate GOT address.
	(mips_cgc_count_got_symbols): Update to use gotplt_union's plist
	member rather than offset.
	(mips_cgc_calculate_relocation): Handle MIPS16/microMIPS PLT
	entries.
	(_bfd_mips_cgc_create_dynamic_sections): Don't set PLT sizes
	here.
	(mips_cgc_make_plt_record): New function.
	(_bfd_mips_cgc_check_relocs): Update comment.  Record occurences
	of JAL relocations that might need a PLT entry.
	(_bfd_mips_cgc_adjust_dynamic_symbol): Update to use
	gotplt_union's plist member rather than offset.  Set individual
	PLT entry sizes here.  Handle MIPS16/microMIPS PLT entries.
	Don't set the symbol's value in the symbol table for PLT
	references here.  Don't set the PLT or PLT GOT section sizes
	here.
	(mips_cgc_estimate_stub_size): Handle microMIPS stubs.
	(mips_cgc_allocate_lazy_stub): Likewise.
	(mips_cgc_lay_out_lazy_stubs): Likewise.  Define a _MIPS_STUBS_
	magic symbol.
	(mips_cgc_set_plt_sym_value): New function.
	(_bfd_mips_cgc_size_dynamic_sections): Set PLT header size and
	PLT and PLT GOT section sizes here.  Set the symbol values in
	the symbol table for PLT references here.  Handle microMIPS
	annotation of the _PROCEDURE_LINKAGE_TABLE_ magic symbol.
	(_bfd_mips_cgc_finish_dynamic_symbol): Update to use
	gotplt_union's plist member rather than offset.  Handle
	MIPS16/microMIPS PLT entries.  Handle microMIPS stubs.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Update to use
	gotplt_union's plist member rather than offset.  Use
	MIPS_CGC_GOT_SIZE to calculate GOT address.
	(mips_finish_exec_plt): Handle microMIPS PLT.  Return status.
	(_bfd_mips_cgc_finish_dynamic_sections): Handle result from
	mips_finish_exec_plt.
	(_bfd_mips_cgc_link_hash_table_create): Update to use
	gotplt_union's plist member rather than offset.
	(_bfd_mips_cgc_get_synthetic_symtab): New function.

2013-06-24  Wawa  <caojinyu@msn.com>

	PR 15657
	* hash.c (_bfd_stringtab_add): Copy the string if COPY is true.

2013-06-23  Richard Sandiford  <rdsandiford@googlemail.com>

	* Makefile.am (BFD32_BACKENDS, BFD32_BACKENDS_CFILES): Move MIPS CGC
	files to...
	(BFD64_BACKENDS, BFD64_BACKENDS_CFILES): ...here.
	* Makefile.in: Regenerate.
	* config.bfd: Enclose all MIPS CGC targets in #ifdef BFD64.
	Set want64 to true for them at the end.
	* targets.c (_bfd_target_vector): Protect MIPS CGC targets with
	#ifdef BFD64.

2013-06-22  Sandra Loosemore  <sandra@codesourcery.com>

	* cgc32-nios2.c (nios2_cgc32_finish_dynamic_sections): Don't
	set sh_entsize for PLT section.

2013-06-20  Yufeng Zhang  <yufeng.zhang@arm.com>

	* bfd-in.h (bfd_cgc64_aarch64_set_options): Add 'extern'.
	* bfd-in2.h: Re-generated.
	* cgc64-aarch64.c (RELOC_SECTION): Removed.
	(SWAP_RELOC_IN, SWAP_RELOC_OUT): Ditto.
	(AARCH64_CGC_OS_ABI_VERSION): Ditto.
	(cgc64_aarch64_link_hash_traverse): Ditto.
	(cgc64_aarch64_size_stubs): Change 'Aarch64' to 'AArch64' in the
	comment.

2013-06-19  Will Newton  <will.newton@linaro.org>

	* configure: Regenerated.
	* configure.in: Remove aarch64 dependency on cgc-ifunc.c.
	* cgc64-aarch64.c: Remove objalloc.h include.
	(cgc64_aarch64_howto_dynrelocs): Remove R_AARCH64_IRELATIVE howto.
	(struct cgc64_aarch64_link_hash_table): Remove ifunc related
	members. (cgc_aarch64_local_htab_hash): Remove function.
	(cgc_aarch64_local_htab_eq): Remove function.
	(cgc_aarch64_get_local_sym_hash): Remove function.
	(cgc64_aarch64_link_hash_table_create): Remove local hash
	table initialization.
	(cgc64_aarch64_final_link_relocate): Remove sym argument and
	handling of ifunc symbols.
	(cgc64_aarch64_relocate_section): Don't pass sym argument to
	cgc64_aarch64_final_link_relocate.
	(cgc64_aarch64_gc_sweep_hook): Remove handling of ifunc symbols.
	(cgc64_aarch64_adjust_dynamic_symbol): Likewise.
	(cgc64_aarch64_check_relocs): Likewise.
	(cgc64_aarch64_post_process_headers): Remove call to
	_bfd_cgc_set_osabi.
	(cgc64_aarch64_is_function_type): New function.
	(cgc64_aarch64_allocate_dynrelocs): Remove handling of ifunc
	symbols. (cgc_aarch64_allocate_local_dynrelocs): Remove function.
	(cgc64_aarch64_size_dynamic_sections): Remove call to
	cgc_aarch64_allocate_local_dynrelocs.
	(cgc64_aarch64_create_small_pltn_entry): Remove info argument.
	Remove creation of R_AARCH64_IRELATIVE dynamic relocs.
	(cgc64_aarch64_finish_dynamic_symbol): Remove handling of ifunc
	symbols. (cgc_aarch64_finish_local_dynamic_symbol): Remove
	function. (cgc64_aarch64_finish_dynamic_sections): Remove call to
	cgc_aarch64_finish_local_dynamic_symbol.
	(cgc64_aarch64_add_symbol_hook): Remove function.

2013-06-14  Yufeng Zhang  <yufeng.zhang@arm.com>

	* cgc64-aarch64.c (cgc64_aarch64_final_link_relocate): Call
	aarch64_resolve_relocation and bfd_cgc_aarch64_put_addend to
	handle the relocations of R_AARCH64_JUMP26, R_AARCH64_CALL26,
	R_AARCH64_LD64_GOT_LO12_NC, R_AARCH64_ADR_GOT_PAGE and
	R_AARCH64_GOT_LD_PREL19.

2013-06-13  Terry Guo  <terry.guo@arm.com>

	PR ld/15302
	* cgc32-arm.c (allocate_dynrelocs_for_symbol): Transform
	ST_BRANCH_TO_ARM into ST_BRANCH_TO_THUMB if the target only
	supports thumb instructions.

2013-06-11  DJ Delorie  <dj@redhat.com>

	* cgc32-rl78.c (rl78_cgc_relocate_section): Fix OPsub math.

2013-06-11  Will Newton  <will.newton@linaro.org>

	* cgc64-aarch64.c (cgc_aarch64_get_local_sym_hash): Use
	CGC64_R_SYM instead of CGC32_R_SYM.

2013-06-11  Nick Clifton  <nickc@redhat.com>

	* cgc32-rl78.c (rl78_cgc_finish_dynamic_sections): Onlly run
	checks if the dynamic sections have been created and relaxation
	has not been performed.

2013-06-07  Will Newton  <will.newton@linaro.org>

	* configure: Regenerate.
	* configure.in: Build cgc-ifunc.o for AArch64.
	* cgc64-aarch64.c: Include objalloc.h.
	(cgc64_aarch64_howto_dynrelocs): Add R_AARCH64_IRELATIVE howto.
	(struct cgc64_aarch64_link_hash_table): Add members for handling
	R_AARCH64_IRELATIVE relocations.
	(cgc_aarch64_local_htab_hash): New function.
	(cgc_aarch64_local_htab_eq): New function.
	(cgc_aarch64_get_local_sym_hash): New function.
	(cgc64_aarch64_link_hash_table_create): Initialize local STT_GNU_IFUNC
	symbol hash.
	(cgc64_aarch64_hash_table_free): Free local STT_GNU_IFUNC symbol hash.
	(cgc64_aarch64_final_link_relocate): Add sym argument.  Add support
	for handling STT_GNU_IFUNC symbols.
	(cgc64_aarch64_gc_sweep_hook): Add support for garbage collecting
	references to STT_GNU_IFUNC symbols.
	(cgc64_aarch64_adjust_dynamic_symbol): Add support for handling
	STT_GNU_IFUNC symbols.
	(cgc64_aarch64_check_relocs): Add support for handling STT_GNU_IFUNC
	symbols.  Ensure we don't increase plt.refcount from -1 to 0.
	(cgc64_aarch64_post_process_headers): Call _bfd_cgc_set_osabi.
	(cgc64_aarch64_is_function_type): Remove function.
	(cgc64_aarch64_allocate_dynrelocs): Call
	_bfd_cgc_allocate_ifunc_dyn_relocs for STT_GNU_IFUNC symbols.
	(cgc_aarch64_allocate_local_dynrelocs): New function.
	(cgc64_aarch64_size_dynamic_sections): Call
	cgc_aarch64_allocate_local_dynrelocs.  Initialize next_irelative_index.
	(cgc64_aarch64_create_small_pltn_entry): Add info argument.
	Add support for creating .iplt entries for STT_GNU_IFUNC symbols.
	(cgc64_aarch64_finish_dynamic_symbol): Add support for handling
	STT_GNU_IFUNC symbols and .iplt.
	(cgc_aarch64_finish_local_dynamic_symbol): New function.
	(cgc64_aarch64_finish_dynamic_sections): Call
	cgc_aarch64_finish_local_dynamic_symbol.
	(cgc64_aarch64_add_symbol_hook): New function.

2013-06-03  Alan Modra  <amodra@gmail.com>

	* syms.c (_bfd_stab_section_find_nearest_line): Add last_str
	var.  Use it with last_stab.

2013-05-30  Paul Brook  <paul@codesourcery.com>

	* bfd-in2.h: Regenerate.
	* cgc32-mips.c (cgc_mips_eh_howto): New.
	(bfd_cgc32_bfd_reloc_type_lookup ): Support BFD_RELOC_MIPS_EH.
	(bfd_cgc32_bfd_reloc_name_lookup): Likewise.
	(mips_cgc32_rtype_to_howto): Support R_MIPS_EH.
	* cgc64-mips.c (cgc_mips_eh_howto): New.
	(bfd_cgc64_bfd_reloc_type_lookup): Support BFD_RELOC_MIPS_EH.
	(bfd_cgc64_bfd_reloc_name_lookup): Likewise.
	(mips_cgc64_rtype_to_howto): Support R_MIPS_EH.
	* libbfd.h: Regenerate.
	* reloc.c (BFD_RELOC_MIPS_EH): New.

2013-05-29  Nick Clifton  <nickc@redhat.com>

	* dwarf2.c (struct dwarf2_debug): Add fields for handling
	alternate debug info source.
	(dwarf_debug_sections): Add entries for alternate .debug_str and
	.debug_info sections.
	(dwarf_debug_section_enum): Likewise.
	(read_alt_indirect_string): New function.  Handles a
	DW_FORM_GNU_strp_alt attribute.
	(read_alt_indirect_ref): New function.  Handles a
	DW_FORM_GNU_ref_alt attribute.
	(read_attribute_value): Process DW_FORM_GNU_ref_alt and
	DW_FORM_GNU_strp_alt.
	(find_abstract_instance_name): Handle DW_FORM_GNU_ref_alt
	attributes.
	(_bfd_dwarf2_cleanup_debug_info): Free alternate debug info
	sources.
	* opncls.c (GNU_DEBUGALTLINK): Define.
	(bfd_get_alt_debug_link_info): New function.
	(separate_alt_debug_file_exists): New function.
	(find_separate_debug_file): Add parameters for fetch and check
	functions.
	(bfd_follow_gnu_debugaltlink): New function.
	* bfd-in2.h: Regenerate.

2013-05-28  Yufeng Zhang  <yufeng.zhang@arm.com>

	* reloc.c (BFD_RELOC_AARCH64_TLSDESC_ADR_PAGE): Rename to ...
	(BFD_RELOC_AARCH64_TLSDESC_ADR_PAGE21): ... this.
	(BFD_RELOC_AARCH64_TLSDESC_LD64_PREL19): Rename to ...
	(BFD_RELOC_AARCH64_TLSDESC_LD_PREL19): ...  this.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* cgc64-aarch64.c (IS_AARCH64_TLSDESC_RELOC): Update to use
	the correct names.
	(cgc64_aarch64_tlsdesc_howto_table): Likewise.
	(cgc64_aarch64_reloc_map): Likewise.
	(aarch64_resolve_relocation): Likewise.
	(bfd_cgc_aarch64_put_addend): Likewise.
	(aarch64_tls_transition_without_check): Likewise.
	(aarch64_reloc_got_type): Likewise.
	(cgc64_aarch64_final_link_relocate): Likewise.
	(cgc64_aarch64_tls_relax): Likewise.
	(cgc64_aarch64_relocate_section): Likewise.
	(cgc64_aarch64_gc_sweep_hook): Likewise.
	(cgc64_aarch64_check_relocs): Likewise.

2013-05-26  Mark Wielaard  <mjw@redhat.com>

	* cache.c (BFD_CACHE_MAX_OPEN): Remove define.
	(max_open_files): New static int initialized to zero.
	(bfd_cache_max_open): New static function to set and return
	max_open_files.
	(bfd_cache_init): Use bfd_cache_max_open.
	(bfd_open_file): Likewise.
	* configure.in (AC_CHECK_HEADERS): Add sys/resource.h.
	(AC_CHECK_FUNCS): Add getrlimit.
	* configure: Regenerated.
	* config.in: Likewise.
	* sysdep.h: Check and include sys/resource.h for getrlimit.

2013-05-23  Alan Modra  <amodra@gmail.com>

	* format.c (bfd_check_format_matches): Don't match a target in
	targ_selvecs if some other target is a better match.  If
	targets implement match priority, fall back to the first of
	the best matches.

2013-05-22  Eric Herman  <eric@freesa.org>

	PR binutils/15462
	* cgcxx-mips.c (_bfd_mips_cgc_relocate_section): Warning fix.

2013-05-22  Ralf Dreesen  <gamma@dreesen.net>

	PR binutils/15474
	* srec.c (srec_set_section_contents): Properly convert size
	and offset to address when octets_per_byte is not unity.

2013-05-20  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-vax.c (cgc_vax_instantiate_got_entries): Only set the
	refcount member of the gotplt_union when resetting the reference
	count.  Adjust comment.

2013-05-20  Will Newton  <will.newton@linaro.org>

	* cgc64-aarch64.c (cgc64_aarch64_link_hash_entry): Remove
	relocs_copied member.
	(cgc64_aarch64_link_hash_newfunc): Remove initialization of
	relocs_copied member.
	(cgc64_aarch64_copy_indirect_symbol): Remove code to copy
	relocs_copied member.

2013-05-19  Maciej W. Rozycki  <macro@linux-mips.org>

	* cgc32-vax.c (cgc_vax_adjust_dynamic_symbol): Convert K&R
	function definition.

2013-05-16  Cary Coutant  <ccoutant@google.com>

	* ecoff.c (ecoff_link_check_archive_element): Add initializers for
	external_ext_size and esize.

2013-05-16  Tristan Gingold  <gingold@adacore.com>

	* coff-rs6000.c (_bfd_xcoff_reloc_type_lookup): Handle BFD_RELOC_16.
	* coff64-rs6000.c (xcoff64_reloc_type_lookup): Likewise.

2013-05-15  Andreas Schwab  <schwab@suse.de>

	* cgc64-aarch64.c (cgc_backend_default_execstack): Define to 0.

2013-05-10  Joel Brobecker  <brobecker@adacore.com>

	* coffcode.h (styp_to_sec_flags) [RS6000COFF_C]: Add handling
	of STYP_EXCEPT, STYP_LOADER and STYP_TYPCHK sections.

2013-05-09  Joel Brobecker  <brobecker@adacore.com>

	* bfd.c (_bfd_default_error_handler): Replace use of putc
	by fputc.  Add comment explaining why.

2013-05-09  Alan Modra  <amodra@gmail.com>

	* cgclink.c (cgc_link_add_object_symbols): Don't omit reading
	of symbols when hashes already exist.

2013-05-07  Will Newton  <will.newton@linaro.org>

	* cgc-ifunc.c (_bfd_cgc_allocate_ifunc_dyn_relocs): Add a
	plt_header_size argument for ports where it differs from
	plt_entry_size.
	* cgc-bfd.h: Likewise.
	* cgc32-i386.c: Pass plt_header_size to
	_bfd_cgc_allocate_ifunc_dyn_relocs.
	* cgc64-x86-64.c: Likewise.

2013-05-07  Will Newton  <will.newton@linaro.org>

	* cgc-ifunc.c (_bfd_cgc_create_ifunc_dyn_reloc): Remove unused
	function.
	* cgc-bfd.h: Likewise.

2013-05-06  Paul Brook  <paul@codesourcery.com>

	* cgc64-mips.c (cgc_mips_gnu_pcrel32): New.
	(bfd_cgc64_bfd_reloc_type_lookup, bfd_cgc64_bfd_reloc_name_lookup,
	mips_cgc64_rtype_to_howto): Handle R_MIPS_PC32.
	* cgcn32-mips.c (cgc_mips_gnu_pcrel32): New.
	(bfd_cgcn32_bfd_reloc_type_lookup, bfd_cgcn32_bfd_reloc_name_lookup,
	mips_cgcn32_rtype_to_howto): Handle R_MIPS_PC32.

2013-05-06  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (opd_entry_value): Handle case where symbol
	hashes are not available.

2013-05-06  Alan Modra  <amodra@gmail.com>

	* cgclink.c (cgc_link_add_object_symbols): Don't save symbol
	hashes around loading as-needed library.  Zero them on allocation,
	and restore to initial all-zero state if library not needed.
	Arrange to reuse hashes if we load library again later.

2013-05-04  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgc32-mips.c (cgc_mips_copy_howto, cgc_mips_jump_slot_howto):
	Use _bfd_mips_cgc_generic_reloc instead of bfd_cgc_generic_reloc.
	* cgcn32-mips.c: Likewise.
	* cgc64-mips.c: Likewise.

2013-05-02  Nick Clifton  <nickc@redhat.com>

	* archures.c: Add some more MSP430 machine numbers.
	* config.bfd (msp430): Define targ_selvecs.
	* configure.in: Add bfd_cgc32_msp430_ti_vec.
	* cpu-msp430.c: Add some more MSP430 machine numbers.
	* cgc32-msp430.c Add support for MSP430X relocations.
	Add support for TI compiler generated relocations.
	Add support for sym_diff relocations.
	Add support for relaxing out of range short branches into long
	branches.
	Add support for MSP430 attribute section.
	* reloc.c: Add MSP430X relocations.
	* targets.c: Add bfd_cgc32_msp430_ti_vec.
	* bfd-in2.h: Regenerate.
	* configure: Regenerate.
	* libbfd.h: Regenerate.

2013-05-01  Maciej W. Rozycki  <macro@codesourcery.com>

	* config.bfd: Replace alpha*-*-linuxecoff* pattern with
	alpha*-*-linux*ecoff*.

2013-04-30  Olaf Flebbe  <o.flebbe@science-computing.de>

	PR binutils/15417
	* cgclink.c (cgc_link_add_object_symbols): Initialise 'idx' to
	zero.

2013-04-30  Alan Modra  <amodra@gmail.com>

	* cgclink.c (bfd_cgc_record_link_assignment): Dont make
	STV_INTERNAL symbols STV_HIDDEN.

2013-04-29  Nick Clifton  <nickc@redhat.com>

	* cgclink.c (_bfd_cgc_gc_mark_extra_sections): Remove mark from
	fragmented .debug_line sections associated with unmarked code
	sections.

2013-04-29  Will Newton  <will.newton@linaro.org>

	* cgc32-arm.c (cgc32_arm_populate_plt_entry): Call
	cgc32_arm_add_dynreloc when emitting R_ARM_IRELATIVE relocs.

2013-04-29  Will Newton  <will.newton@linaro.org>

	* cgc64-aarch64.c (cgc64_aarch64_check_relocs): Move relocation
	error check up and add error message.

2013-04-26  Will Newton  <will.newton@linaro.org>

	* cgc64-aarch64.c (cgc64_aarch64_check_relocs): Remove dead code.

2013-04-25  Alan Modra  <amodra@gmail.com>

	* config.bfd: Add powerpc64le-linux.

2013-04-24  H.J. Lu  <hongjiu.lu@intel.com>

	* config.bfd (targ_selvecs): Add bfd_cgc32_x86_64_vec for
	x86_64-*-cgc*.

2013-04-24  Roland McGrath  <mcgrathr@google.com>

	* cgc32-arm.c (cgc32_arm_allocate_plt_entry): If HTAB->nacl_p,
	allocate space for PLT header even if IS_IPLT_ENTRY.
	(arm_nacl_put_plt0): New function, broken out of ...
	(cgc32_arm_finish_dynamic_sections): ... here.  Call it.
	If HTAB->nacl_p, set up the PLT header in .iplt too.
	(cgc32_arm_output_arch_local_syms): If HTAB->nacl_p, write
	a mapping symbol for the start of .iplt too.

2013-04-19  Luca Pizzamiglio  <luca.pizzamiglio@gmail.com>

	* ecoff.c (_bfd_ecoff_sizeof_headers): Cast the return value of
	BFD_ALIGN to int.
	* cgc32-tic6x.c (cgc32_tic6x_size_dynamic_sections): Remove unused
	variables.
	* cgc32-v850.c (v850_cgc_relax_section): Redefine the type of 'i'
	to bfd_vma.
	* vms-alpha.c (evax_bfd_print_etir): Initialize sec_len.

2013-04-22  Alan Modra  <amodra@gmail.com>

	PR ld/15382
	* cgc-bfd.h (RELOC_AGAINST_DISCARDED_SECTION): Don't multiply
	sh_size or reloc_count adjustment by count.

2013-04-22  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (ppc64_cgc_check_relocs): Don't call
	create_linkage_sections here..
	(ppc64_cgc_init_stub_bfd): ..do so here.  Return status.
	(create_linkage_sections): Move earlier in file.
	(ppc64_cgc_setup_section_lists): Remove now useless htab->brlt test.
	* cgc64-ppc.h (ppc64_cgc_init_stub_bfd): Update proto.

2013-04-19  Nick Clifton  <nickc@redhat.com>

	PR binutils/15356
	* compress.c (decompress_contents): Always call inflateEnd, even
	when another inflation operation fails.

2013-04-17  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc-ifunc.c: Update copyright year.

2013-04-17 Luca Pizzamiglio  <luca.pizzamiglio@gmail.com>

	* coffcode.h: Added a cast to void when a bfd_set_section_*()
	macro's return value is ignored.
	* cgc32-hppa.c: Likewise.
	* cgc32-tic6x.c: Likewise.
	* mach-o.c: Likewise.
	* mmo.c: Likewise.
	* opncls.c: Likewise.
	* peicode.h: Likewise.
	* cgc32-m32r.c: Check return value of bfd_set_section_*().
	* cgcnn-ia64.c: Likewise.
	* cgcxx-mips.c: Likewise.
	* vms-alpha.c: Likewise.

2013-04-15  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15371
	* cgc-ifunc.c (_bfd_cgc_allocate_ifunc_dyn_relocs): Check
	regular reference without non-GOT reference when building
	shared library.

2013-04-15  Alan Modra  <amodra@gmail.com>

	* archive.c (_bfd_archive_close_and_cleanup): Clear parent
	cache slot for archives.

2013-04-14  Hans-Peter Nilsson  <hp@bitrange.com>

	* mmo.c (mmo_write_chunk): Break out abfd->tdata.mmo_data to new
	local variable mmop.

2013-04-09  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>

	PR ld/12494
	* cgc32-avr.c: Consider all sections to determine if linker
	relaxation can safely delete a ret after a call/jmp

2013-04-09  Mingjie Xing  <mingjie.xing@gmail.com>

	* bfd.c (typedef bfd, Error reporting, Miscellaneous): Add
	INODEs.

2013-04-08  Tom Tromey  <tromey@redhat.com>

	* som.c (bfd_section_from_som_symbol): No longer static.
	* som.h (bfd_section_from_som_symbol): Declare.

2013-04-06  Alan Modra  <amodra@gmail.com>

	* cgc32-ppc.c (ppc_cgc_check_relocs): Use SYMBOLIC_BIND.
	* cgc64-ppc.c (ppc64_cgc_check_relocs, dec_dynrel_count): Likewise.

2013-04-05  Nick Clifton  <nickc@redhat.com>

	* cgclink.c (cgc_link_add_object_symbols): Revert accidental commit.

2013-04-04  Alan Modra  <amodra@gmail.com>

	* bfd.c (bfd_error_type, bfd_errmsgs): Add bfd_error_missing_dso.
	* bfd-in2.h: Regenerate.
	* cgclink.c (cgc_link_add_object_symbols): Use new error.

2013-04-03  Nick Clifton  <nickc@redhat.com>

	* cgc32-v850.c (v850_cgc_is_target_special_symbol): New function.
	(bfd_cgc32_bfd_is_target_special_symbol): Define.

2013-04-03   Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>

	* cgc64-aarch64.c (cgc64_aarch64_gc_sweep_hook): Use
	cgc64_aarch64_locals to get local GOT reference counts.

2013-04-02  DJ Delorie  <dj@redhat.com>

	* cgc32-rl78.c (GET_RELOC): Assert that there are relocs to get.
	(rl78_cgc_relax_section): Only fetch the next reloc if there is
	one expected.

2013-03-30  Alan Modra  <amodra@gmail.com>

	PR ld/15323
	* cgc-m10300.c (mn10300_cgc_check_relocs): Set non_ir_ref for
	global symbols referenced by relocs.
	* cgc32-arm.c (cgc32_arm_check_relocs): Likewise.
	* cgc32-bfin.c (bfin_check_relocs): Likewise.
	* cgc32-cr16.c (cr16_cgc_check_relocs): Likewise.
	* cgc32-cris.c (cris_cgc_check_relocs): Likewise.
	* cgc32-d10v.c (cgc32_d10v_check_relocs): Likewise.
	* cgc32-dlx.c (cgc32_dlx_check_relocs): Likewise.
	* cgc32-fr30.c (fr30_cgc_check_relocs): Likewise.
	* cgc32-frv.c (cgc32_frv_check_relocs): Likewise.
	* cgc32-hppa.c (cgc32_hppa_check_relocs): Likewise.
	* cgc32-i370.c (i370_cgc_check_relocs): Likewise.
	* cgc32-iq2000.c (iq2000_cgc_check_relocs): Likewise.
	* cgc32-lm32.c (lm32_cgc_check_relocs): Likewise.
	* cgc32-m32c.c (m32c_cgc_check_relocs): Likewise.
	* cgc32-m32r.c (m32r_cgc_check_relocs): Likewise.
	* cgc32-m68hc1x.c (cgc32_m68hc11_check_relocs): Likewise.
	* cgc32-m68k.c (cgc_m68k_check_relocs): Likewise.
	* cgc32-mcore.c (mcore_cgc_check_relocs): Likewise.
	* cgc32-metag.c (cgc_metag_check_relocs): Likewise.
	* cgc32-microblaze.c (microblaze_cgc_check_relocs): Likewise.
	* cgc32-moxie.c (moxie_cgc_check_relocs): Likewise.
	* cgc32-msp430.c (cgc32_msp430_check_relocs): Likewise.
	* cgc32-mt.c (mt_cgc_check_relocs): Likewise.
	* cgc32-nios2.c (nios2_cgc32_check_relocs): Likewise.
	* cgc32-openrisc.c (openrisc_cgc_check_relocs): Likewise.
	* cgc32-ppc.c (ppc_cgc_check_relocs): Likewise.
	* cgc32-rl78.c (rl78_cgc_check_relocs): Likewise.
	* cgc32-s390.c (cgc_s390_check_relocs): Likewise.
	* cgc32-score.c (s3_bfd_score_cgc_check_relocs): Likewise.
	* cgc32-score7.c (s7_bfd_score_cgc_check_relocs): Likewise.
	* cgc32-sh.c (sh_cgc_check_relocs): Likewise.
	* cgc32-tic6x.c (cgc32_tic6x_check_relocs): Likewise.
	* cgc32-tilepro.c (tilepro_cgc_check_relocs): Likewise.
	* cgc32-v850.c (v850_cgc_check_relocs): Likewise.
	* cgc32-vax.c (cgc_vax_check_relocs): Likewise.
	* cgc32-xstormy16.c (xstormy16_cgc_check_relocs): Likewise.
	* cgc32-xtensa.c (cgc_xtensa_check_relocs): Likewise.
	* cgc64-aarch64.c (cgc64_aarch64_check_relocs): Likewise.
	* cgc64-alpha.c (cgc64_alpha_check_relocs): Likewise.
	* cgc64-hppa.c (cgc64_hppa_check_relocs): Likewise.
	* cgc64-ia64-vms.c (cgc64_ia64_check_relocs): Likewise.
	* cgc64-mmix.c (mmix_cgc_check_relocs): Likewise.
	* cgc64-ppc.c (ppc64_cgc_check_relocs): Likewise.
	* cgc64-s390.c (cgc_s390_check_relocs): Likewise.
	* cgc64-sh64.c (sh_cgc64_check_relocs): Likewise.
	* cgcnn-ia64.c (cgcNN_ia64_check_relocs): Likewise.
	* cgcxx-sparc.c (_bfd_sparc_cgc_check_relocs): Likewise.
	* cgcxx-tilegx.c (tilegx_cgc_check_relocs): Likewise.
	* cgcxx-mips.c (_bfd_mips_cgc_check_relocs): Likewise.  Don't
	test indirect/warning links for NULL.

2013-03-29  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15323
	* cgc32-i386.c (cgc_i386_check_relocs): Set non_ir_ref if a
	symbol is referenced by a non-shared object.
	* cgc64-x86-64.c (cgc_x86_64_check_relocs): Likewise.

2013-03-28  Joe Seymour  <jseymour@codesourcery.com>

	* cgc32-sh.c (sh_cgc_relocate_section): Suppress warnings for
	R_SH_REL32 relocations against undefined weak symbols.

2013-03-28  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (struct ppc_dyn_relocs): New.
	(ppc64_cgc_check_relocs): Separate dynrel counts for local syms
	into ifunc and non-ifunc.
	(dec_dynrel_count): Pass in sym rather than sym_sec.  Handle
	separate ifunc/non-ifunc dynrel counts.
	(allocate_got): Always use reliplt for ifunc.
	(allocate_dynrelocs): Likewise.
	(ppc64_cgc_size_dynamic_sections): Likewise.
	(ppc64_cgc_layout_multitoc): Likewise.
	(ppc64_cgc_relocate_section): Likewise.

2013-03-28  Alan Modra  <amodra@gmail.com>

	* cgc32-ppc.c (struct ppc_dyn_relocs): New.
	(ppc_cgc_check_relocs): Separate dynrel counts for local syms
	into ifunc and non-ifunc.
	(allocate_dynrelocs): Always put ifunc relocs into reliplt.
	(ppc_cgc_size_dynamic_sections): Likewise.
	(ppc_cgc_relocate_section): Likewise.

2013-03-28  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (enum cgc_reloc_type_class): Add reloc_class_ifunc.
	(struct cgc_backend_data <cgc_backed_reloc_type_class>): Add
	bfd_link_info* and asection* params.
	(_bfd_cgc_reloc_type_class): Likewise.
	* cgc.c (_bfd_cgc_reloc_type_class): Likewise.
	* cgclink.c (cgc_link_sort_cmp2): Sort first on reloc class.
	(cgc_link_sort_relocs): Update cgc_backed_reloc_type_class call.
	* cgc32-ppc.c (ppc_cgc_reloc_type_class): Return reloc_class_ifunc
	for any reliplt reloc.  Don't return reloc_class_plt for
	R_PPC_REL24 and R_PPC_ADDR24.
	* cgc64-ppc.c (allocate_got): Formatting.
	(ppc64_cgc_reloc_type_class): Return reloc_class_ifunc for any
	reliplt reloc.
	* cgc-m10300.c, * cgc32-arm.c, * cgc32-bfin.c, * cgc32-cr16.c,
	* cgc32-cris.c, * cgc32-hppa.c, * cgc32-i386.c, * cgc32-lm32.c,
	* cgc32-m32r.c, * cgc32-m68k.c, * cgc32-metag.c, * cgc32-nios2.c,
	* cgc32-s390.c, * cgc32-sh.c, * cgc32-sparc.c, * cgc32-tilepro.c,
	* cgc32-vax.c, * cgc32-xtensa.c, * cgc64-aarch64.c, * cgc64-alpha.c,
	* cgc64-hppa.c, * cgc64-ia64-vms.c, * cgc64-s390.c, * cgc64-sparc.c,
	* cgc64-x86-64.c, * cgcnn-ia64.c, * cgcxx-tilegx.c, * cgcxx-tilegx.h:
	Add extra params to the various reloc_type_class functions.

2013-03-27  Alan Modra  <amodra@gmail.com>

	* cgc32-ppc.c (ppc_cgc_check_relocs): Set PLT_IFUNC in local got
	masks for all local ifunc syms.
	(allocate_dynrelocs): Don't use htab->relgot for ifunc.
	(ppc_cgc_size_dynamic_sections): Likewise.
	(ppc_cgc_relocate_section): Likewise.

2013-03-27  Will Newton  <will.newton@linaro.org>

	* cgc32-arm.c (cgc32_arm_final_link_relocate): Avoid emitting a
	dynamic reloc for symbols with dynindx == -1.
	(allocate_dynrelocs_for_symbol): Avoid allocating space for a
	dynamic reloc for symbols with dynindx == -1.

2013-03-27  Will Newton  <will.newton@linaro.org>

	* cgc32-arm.c (cgc32_arm_final_link_relocate): Avoid emitting a
	dynamic reloc for non-default visibility undefined weaks.
	(allocate_dynrelocs_for_symbol): Avoid allocating space for a
	dynamic reloc for non-default visibility undefined weaks.

2013-03-26  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_add_default_symbol): Preserve section
	over _bfd_cgc_merge_symbol calls.

2013-03-26  Alan Modra  <amodra@gmail.com>

	* cgclink.c (cgc_link_add_object_symbols): Add assertion for
	common override alignment check code.  Formatting.

2013-03-25  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_merge_symbol): Set old_alignment for
	usual common symbols as well as for dynamic.  Add poldbfd param.
	Save old bfd.  Adjust callers.
	(_bfd_cgc_add_default_symbol): Add poldbfd param.  Pass "section"
	and "value" by value, not pointer.  Adjust caller.
	(cgc_link_add_object_symbols): Combine undef_bfd and old_bfd vars.
	Delete code to set same.  Use old_bfd and old_alignment from
	_bfd_cgc_merge_symbol instead.  Add default symbol before
	alignment and size checks.  Wrap overlong lines.

2013-03-25  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_add_default_symbol): Delete "override" param.
	(cgc_link_add_object_symbols): Don't call _bfd_cgc_add_default_symbol
	when override is true.

2013-03-25  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_merge_symbol): Use local var holding value
	of *sym_hash.

2013-03-25  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_merge_symbol): Don't discard TLS symbols here.
	Wrap long lines.
	(cgc_link_add_object_symbols): Discard TLS symbols for --just-syms
	early in symbol loop.

2013-03-25  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct cgc_backend_data <merge_symbol>): Update proto.
	(_bfd_cgc_init_reloc_shdr): Delete.
	* cgc.c (_bfd_cgc_init_reloc_shdr): Make static.
	* cgc64-x86-64.c (cgc_x86_64_merge_symbol): Trim parameters to
	just what is needed.
	* cgclink.c (_bfd_cgc_merge_symbol): Update bed->merge_symbol call.

2013-03-23  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (_bfd_cgc_merge_symbol): Delete declaration.
	* cgclink.c (_bfd_cgc_merge_symbol): Make static.
	* cgc32-sh-symbian.c (sh_symbian_relocate_section): Don't call
	_bfd_cgc_merge_symbol, call _bfd_generic_link_add_one_symbol.

2013-03-23  Alan Modra  <amodra@gmail.com>

	PR ld/15270
	* cgclink.c (cgc_link_add_object_symbols): Don't set def_regular
	or ref_regular for BFD_PLUGIN owned syms, or have them affect
	def_dynamic/ref_dynamic.
	(_bfd_cgc_fix_symbol_flags): Don't set def_regular for BFD_PLUGIN
	owned syms.

2013-03-22  David S. Miller  <davem@davemloft.net>

	* cgcxx-sparc.c (_bfd_sparc_cgc_merge_private_bfd_data): Set type of
	hwcaps attribute.

2013-03-22  Achille Fouilleul  <achille.fouilleul+binutils@gadz.org>

	PR ld/14902
	* cgc32-h8300.c (cgc32_h8_relax_delete_bytes): Fix off by one
	errors adjusting relocs and symbols.

2013-03-21  Michael Schewe  <michael.schewe@gmx.net>

	* cgc32-h8300 (h8_relax_section): Add new relaxation of mov
	@(disp:32,ERx) to mov @(disp:16,ERx).
	(R_H8_DISP32A16): New reloc.
	Comments added and corrected.
	* reloc.c (BFD_RELOC_H8_DISP32A16): New reloc.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

2013-03-21  Kai Tietz  <ktietz@redhat.com>

	* coffgen.c (coff_real_object_p): Make global.
	* peicode.h (coff_real_object_p): Add prototype.
	(FILHDR): Defined for COFF_IMAGE_WITH_PE as
	external_PEI_IMAGE_hdr structure.
	(coff_swap_filehdr_in): Handle variable header-size.
	* peXXigen.c (_bfd_XXi_swap_aouthdr_in): Just handle amount
	of directory-entiries as specified in pe-header.

2013-03-21  Nick Clifton  <nickc@redhat.com>

	PR sim/15286
	* cgc32-arm.c (bfd_arm_get_mach_from_attributes): Identify XScale,
	iWMMXt and iWMMXt2 processors from attributes.

2013-03-20  Alan Modra  <amodra@gmail.com>

	* cgclink.c (_bfd_cgc_make_dynamic_reloc_section): Override
	sh_type according to is_rela.

2013-03-18  Alan Modra  <amodra@gmail.com>

	PR ld/12549
	* cgclink.c (cgc_link_add_object_symbols): Exclude weak refs when
	considering whether an --as-needed library is needed.

2013-03-14  Tom Tromey  <tromey@redhat.com>

	* opncls.c (bfd_get_debug_link_info): Rename from
	get_debug_link_info.  Export.  Update comment.
	(find_separate_debug_file): Update.
	* bfd-in2.h: Rebuild.

2013-03-08  Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>

	* cgc64-aarch64.c (cgc_backend_can_gc_sections): Enable gc-section
	support.
	(cgc64_aarch64_gc_sweep_hook): Handle GOT, TLS and PLT related
	relocs.

2013-03-08  Andreas Arnez  <arnez@linux.vnet.ibm.com>

	* cgc-bfd.h (cgccore_write_s390_tdb): Add prototype.
	* cgc.c (cgccore_write_s390_tdb): New function.
	(cgccore_write_register_note): Call it.
	(cgccore_grok_s390_tdb): New function.
	(cgccore_grok_note): Call it.

2013-03-08  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgcxx-mips.c (mips_cgc_allocate_lazy_stub): Correct data type.

2013-03-05  Corinna Vinschen  <vinschen@redhat.com>

	* config.bfd: Add x86_64-*-cygwin to list of supported targets.

2013-03-04  Alan Modra  <amodra@gmail.com>

	* cgc32-ppc.c (ppc_cgc_relocate_section <R_PPC_PLTREL24>): Adjust
	non-zero addends when relocatable, rather than addends >= 32768.
	Always zero "addend" before applying relocation.

2013-03-04  Nick Clifton  <nickc@redhat.com>

	* archive64.c (bfd_cgc64_archive_write_armap): Fix calculation of
	file pointer offsets for thin archives.

2013-02-28  Nathan Sidwell  <nathan@codesourcery.com>

	* cgc32-arm.c (cgc32_arm_size_dynamic_sections): Don't call
	cgc32_arm_allocate_dynrelocs for source reloc for non-dynamic link.

2013-02-27  DJ Delorie  <dj@redhat.com>

	* reloc.c (BFD_RELOC_RL78_CODE): Add.
	* libbfd.h: Regenerate.
	* bfd-in2.h: Regenerate.
	* cgc32-rl78.c (rl78_cgc_relocate_section): Handle weak code
	references in compuated relocs.

2013-02-26  Anthony Green  <green@moxielogic.com>

	* config.bfd: Extend moxie-rtems target triplet name support.

2013-02-21  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15167
	* cgc64-ia64-vms.c (cgc64_vms_link_add_object_symbols): Set
	unique_global only for definition.
	* cgclink.c (_bfd_cgc_merge_symbol): Don't set unique_global
	here.
	(cgc_link_add_object_symbols): Set unique_global only
	for definition.

2013-02-21  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct cgc_build_id): Extracted from..
	(struct cgc_build_id_info): ..here.  Delete.
	(struct output_cgc_obj_tdata): New, extracted from..
	(struct cgc_obj_tdata): ..here.  Reorganize for better packing.
	Add "o" field.
	(cgc_program_header_size): Reference tdata->o.
	(cgc_seg_map, cgc_next_file_pos, cgc_eh_frame_hdr, cgc_linker,
	cgc_stack_flags, cgc_shstrtab, cgc_strtab_sec, cgc_shstrtab_sec,
	cgc_section_syms, cgc_num_section_syms, cgc_flags_init): Likewise.
	* cgc.c (bfd_cgc_allocate_object): Allocate output_cgc_obj_tdata
	when opening bfd in any mode that might write.
	(_bfd_cgc_write_object_contents): Use build_id field in
	output_cgc_obj_tdata.
	(_bfd_cgc_close_and_cleanup): Tweak cgc_shstrtab test.
	(cgcobj_grok_gnu_build_id): Adjust for cgc_tdata changes.

2013-02-21  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct core_cgc_obj_tdata): New.
	(struct cgc_obj_tdata): Delete core_signal, core_pid, core_lwpid,
	core_program, and core_command.  Add "core".
	* cgc.c (bfd_cgc_mkcorefile): Allocate "core" struct.
	Update all refs to tdata core fields.
	* cgc32-am33lin.c, * cgc32-arm.c, * cgc32-cris.c, * cgc32-frv.c,
	* cgc32-hppa.c, * cgc32-i386.c, * cgc32-m68k.c, * cgc32-mips.c,
	* cgc32-nios2.c, * cgc32-ppc.c, * cgc32-s390.c, * cgc32-score.c,
	* cgc32-score7.c, * cgc32-sh.c, * cgc32-sparc.c, * cgc32-tilegx.c,
	* cgc32-tilepro.c, * cgc32-xtensa.c, * cgc64-aarch64.c,
	* cgc64-hppa.c, * cgc64-mips.c, * cgc64-ppc.c, * cgc64-tilegx.c,
	* cgc64-x86-64.c, * cgccore.h, * cgcn32-mips.c: Update all refs
	to tdata core fields.

2013-02-21  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct cgc_obj_tdata): Rename segment_map to seg_map.
	Delete num_locals and num_globals.
	(cgc_num_locals, cgc_num_globals): Don't define.
	(cgc_seg_map, cgc_next_file_pos, cgc_eh_frame_hdr, cgc_linker,
	cgc_stack_flags, cgc_strtab_sec, cgc_shstrtab_sec): Define.
	* bfd.c, * cgc-eh-frame.c, * cgc-nacl.c, * cgc-vxworks.c, * cgc.c,
	* cgc32-arm.c, * cgc32-lm32.c, * cgc32-ppc.c, * cgc32-rx.c,
	* cgc32-spu.c, * cgc64-hppa.c, * cgccode.h, * cgclink.c,
	* cgcnn-ia64.c, * cgcxx-mips.c: Use newly defined cgc_obj_tdata
	accessor macros.
	* cgc.c (cgc_map_symbols): Add pnum_locals param.  Return
	number of locals syms via new param.
	(swap_out_syms): Adjust to suit cgc_map_symbols change.

2013-02-19  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgcxx-mips.c (_bfd_mips_cgc_finish_dynamic_symbol): Also clear
	STO_MICROMIPS annotation.

2013-02-19  Alan Modra  <amodra@gmail.com>

	* configure.in: Bump version to 2.23.52.
	* cgc-bfd.h (struct cgc_build_id_info): New.
	(struct cgc_obj_tdata): Delete after_write_object_contents,
	after_write_object_contents_info and build_id_size.  Make build_id
	a pointer to struct cgc_build_id_info.
	* cgc.c (_bfd_cgc_write_object_contents): Style.  Update
	after_write_ibject_contents invocation.
	(cgcobj_grok_gnu_build_id): Update for new build_id struct.  Don't
	allow zero size notes.
	* configure: Regenerate.

2013-02-18  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgc64-mips.c (micromips_cgc64_howto_table_rel): Add
	R_MICROMIPS_SCN_DISP and R_MICROMIPS_JALR.
	(micromips_cgc64_howto_table_rela): Likewise.
	(micromips_reloc_map): Add BFD_RELOC_MICROMIPS_JALR.
	* cgcn32-mips.c (cgc_micromips_howto_table_rel): Add
	R_MICROMIPS_SCN_DISP and R_MICROMIPS_JALR.
	(cgc_micromips_howto_table_rela): Likewise.
	(micromips_reloc_map): Add BFD_RELOC_MICROMIPS_JALR.

2013-02-18  Paul Brook  <paul@codesourcery.com>

	* cgcxx-mips.c (MICROMIPS_P): New macro.
	(_bfd_mips_cgc_symbol_processing): Use it.

2013-02-18  Maciej W. Rozycki  <macro@codesourcery.com>

	* cgcxx-mips.c (_bfd_mips_cgc_create_dynamic_sections): Clarify
	comment on _PROCEDURE_LINKAGE_TABLE_ creation.

2013-02-18  Alan Modra  <amodra@gmail.com>

	PR ld/12549
	* cgc-bfd.h (_bfd_cgc_strtab_clear_refs): Delete.
	(_bfd_cgc_strtab_clear_all_refs): Declare.
	(_bfd_cgc_strtab_resize): Declare.
	* cgc-strtab.c (_bfd_cgc_strtab_clear_refs): Delete.
	(_bfd_cgc_strtab_clear_all_refs): New function.
	(_bfd_cgc_strtab_resize): Likewise.
	* cgclink.c (cgc_link_add_object_symbols): Use _bfd_cgc_strtab_resize.

2013-02-18  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct cgc_obj_tdata): Move find_line_info, local_stubs,
	local_call_stubs, cgc_data_symbol, cgc_text_symbol, cgc_data_section,
	and cgc_text_section to..
	* cgcxx-mips.c (struct mips_cgc_obj_tdata): ..here.  Update all refs.
	* cgc64-alpha.c (struct mips_cgc_find_line): Rename to..
	(struct alpha_cgc_find_line): ..this.
	(struct alpha_cgc_obj_tdata): Add find_line_info, update refs.

2013-02-16  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15146
	* cgclink.c (cgc_link_add_object_symbols): Don't add DT_NEEDED
	for references from the dummy bfd.

2013-02-16  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15149
	* cgclink.c (cgc_link_add_object_symbols): Also track weak
	references.

2013-02-15  H.J. Lu  <hongjiu.lu@intel.com>

	PR binutils/15151
	* archive.c (_bfd_find_nested_archive): Don't allow a nested
	archive pointing to itself.
	(_bfd_get_elt_at_filepos): Revert the last 2 changes.

2013-02-15  Nick Clifton  <nickc@redhat.com>

	PR binutils/15140
	* archive.c (_bfd_get_elt_at_filepos): Prevent an infinite loop
	accessing a corrupt nested archive.

2013-02-13  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_page_ref): New structure.
	(mips_got_page_entry): Use a section rather than a (bfd, symndx)
	pair to represent the anchor point.
	(mips_got_info): Add a got_page_refs field.
	(mips_cgc_link_hash_table): Add a sym_cache field.
	(mips_got_page_ref_hash, mips_got_page_ref_eq): New functions.
	(mips_got_page_entry_hash, mips_got_page_entry_eq): Update for
	new anchor representation.
	(mips_cgc_create_got_info): Create got_page_refs rather than
	got_page_entries.
	(mips_cgc_record_got_page_ref): New function.
	(mips_cgc_pages_for_range): Move further down file.
	(mips_cgc_record_got_page_entry): Likewise.  Take a got as argument.
	Use a section rather than a (bfd, symndx) pair to represent the
	anchor point.
	(mips_cgc_resolve_got_page_ref): New function.
	(mips_cgc_resolve_final_got_entries): Use it to populate
	got_page_entries.
	(_bfd_mips_cgc_check_relocs): Call mips_cgc_record_got_page_ref
	rather than mips_cgc_record_got_page_entry.  Only nullify h
	afterwards.
	(mips_cgc_lay_out_got): Call mips_cgc_resolve_final_got_entries
	earlier.

2013-02-12  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_lay_out_got): Count VxWorks GOT relocs
	in g->relocs.

2013-02-12  Alan Modra  <amodra@gmail.com>

	* cgcxx-target.h (bfd_cgcNN_bfd_link_hash_table_free): Provide
	suitable definition when using generic linker hash table.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_count_got_entries): Delete.
	(mips_cgc_check_recreate_got, mips_cgc_recreate_got): Take a
	mips_cgc_traverse_got_arg.  Count GOT entries.
	(mips_cgc_resolve_final_got_entries): Take the bfd_link_info
	as argument.  Update after above changes.
	(mips_cgc_merge_got, mips_cgc_lay_out_got): Don't call
	mips_cgc_count_got_entries.  Update the calls to
	mips_cgc_resolve_final_got_entries.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_tls_type): New enum.
	(mips_got_entry): Add tls_initialized.
	(mips_cgc_got_entry_hash, mips_cgc_got_entry_eq, mips_tls_got_relocs)
	(mips_cgc_count_got_entry, mips_cgc_initialize_tls_index): Remove
	GOT_TLS_TYPE masks.
	(mips_cgc_reloc_tls_type, mips_tls_got_entries)
	(mips_cgc_record_global_got_symbol, mips_cgc_initialize_tls_index)
	(_bfd_mips_cgc_finish_dynamic_symbol): Use GOT_TLS_NONE rather
	than GOT_NORMAL.
	(mips_cgc_initialize_tls_slots): Replace got_offset and tls_type_p
	arguments with a GOT entry.  Remove GOT_TLS_TYPE masks.  Use
	tls_initialized rather than GOT_TLS_DONE.
	(mips_tls_got_index): Delete.
	(mips_cgc_local_got_index, mips_cgc_global_got_index): Use
	mips_cgc_initialize_tls_slots rather than mips_tls_got_index.
	(mips_cgc_record_got_entry): Initialize tls_initialized.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_entry): Remove tls_ldm_offset.
	(mips_cgc_link_hash_entry): Remove tls_ie_type, tls_gd_type,
	tls_ie_got_offset and tls_gd_got_offset.
	(mips_cgc_link_hash_newfunc): Remove initialization.
	(mips_cgc_create_got_info): Likewise.
	(mips_cgc_count_local_got_entries, mips_cgc_count_global_tls_entries)
	(mips_tls_single_got_index): Delete.
	(mips_cgc_local_got_index): Always use the GOT entry to track
	GOT indices.
	(mips_cgc_global_got_index): Likewise.
	(mips_cgc_create_local_got_entry): Assert that TLS entries have
	already been allocated.
	(mips_cgc_record_global_got_symbol): Don't initialize
	tls_ie_type or tls_gd_type.
	(mips_cgc_count_got_symbols): Only count reloc-only GOT entries here.
	(mips_cgc_initialize_tls_index): Allocate a GOT index for every TLS
	entry.
	(mips_cgc_lay_out_got): Use mips_cgc_count_got_entries to count
	the GOT entries.
	(_bfd_mips_cgc_finish_dynamic_symbol): Assert that TLS GOT offsets
	have been allocated.
	(_bfd_mips_cgc_copy_indirect_symbol): Remove handling of
	tls_ie_type and tls_gd_type.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_create_local_got_entry): Tidy.  Avoid
	aliasing violation.  Check for htab allocation failures.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_primary_global_got_index): New function,
	split out from...
	(mips_cgc_global_got_index): ...here.  Reorder arguments so that
	the output bfd and info come first.
	(mips_cgc_calculate_relocation): Update the call to
	mips_cgc_global_got_index accordingly.
	(_bfd_mips_cgc_finish_dynamic_symbol): Use
	mips_cgc_primary_global_got_index rather than
	mips_cgc_global_got_index.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_entry): Update comments.
	(mips_cgc_multi_got_entry_eq): Rename to...
	(mips_cgc_got_entry_eq): ...this, deleting the old definition.
	(mips_cgc_create_got_info): Remove master_got_p argument.
	Always use mips_cgc_got_entry_eq.
	(mips_cgc_bfd_got, mips_cgc_multi_got, mips_cgc_create_got_section):
	Update calls accordingly.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_info): Remove bfd2got.
	(mips_cgc_bfd2got_hash): Delete.
	(mips_cgc_got_per_bfd_arg): Remove bfd2got.
	(mips_cgc_replace_bfd_got, mips_cgc_count_got_entries): New functions.
	(mips_cgc_global_got_index, mips_cgc_create_local_got_entry): Use
	g->next to test for the multigot case.  Use mips_cgc_bfd_got rather
	than mips_cgc_got_for_ibfd.
	(mips_cgc_bfd2got_entry_hash, mips_cgc_bfd2got_entry_eq)
	(mips_cgc_got_for_ibfd, mips_cgc_get_got_for_bfd): Delete.
	(mips_cgc_make_got_per_bfd): Replace with...
	(mips_cgc_add_got_entry): ...this new function.
	(mips_cgc_make_got_pages_per_bfd): Replace with...
	(mips_cgc_add_got_page_entry): ...this new function.
	(mips_cgc_merge_got_with): Replace bfd2got argument with separate
	bfd and GOT arguments.  Use mips_cgc_add_got_entry and
	mips_cgc_add_got_page_entry instead of mips_cgc_make_got_per_bfd
	and mips_cgc_make_got_pages_per_bfd.  Use mips_cgc_replace_bfd_got
	to set the BFD's GOT and free the old table.
	(mips_cgc_merge_got): Replace bfd2got argument with separate
	bfd and GOT arguments.  Apply mips_cgc_resolve_final_got_entries.
	Use mips_cgc_count_got_entries to count the number of entries in
	each GOT.  Update the calls to mips_cgc_merge_got_with.
	(mips_cgc_adjust_gp): Use g->next to test for the multigot case.
	Use mips_cgc_bfd_got rather than mips_cgc_got_for_ibfd.
	(mips_cgc_multi_got): Don't create the bfd2got hash table.
	Replace hash table traversal with a walk over the input bfds,
	updating the call to mips_cgc_merge_got.  Use mips_cgc_replace_bfd_got
	to set the output bfd's GOT.
	(mips_cgc_lay_out_got): Rename "sub" to "ibfd".  Record that all
	bfds use the master GOT in the single-GOT case.
	(_bfd_mips_cgc_finish_dynamic_sections): Use mips_cgc_bfd_got
	rather than mips_cgc_got_for_ibfd.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_obj_tdata): Add a got field.
	(mips_cgc_bfd_got, mips_cgc_record_got_entry): New functions.
	(mips_cgc_record_global_got_symbol): Update the hash entry before
	adding the mips_got_entry.  Use mips_cgc_record_got_entry to do
	the latter.
	(mips_cgc_record_local_got_symbol): Use mips_cgc_record_got_entry.
	(mips_cgc_record_got_page_entry): Record the entry in both the
	master and bfd GOTs.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_recreate_got): Don't change the entry;
	create another one if necessary.
	(mips_cgc_set_gotidx): New function.
	(mips_cgc_set_global_gotidx): Use it.
	(mips_cgc_initialize_tls_index): Likewise.  Take a
	mips_cgc_traverse_got_arg as argument.
	(mips_cgc_lay_out_got): Update use of mips_cgc_initialize_tls_index.
	(mips_cgc_multi_got): Likewise.  Cope with error returns from
	mips_cgc_set_global_gotidx.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_info): Add relocs field.
	(mips_cgc_set_global_got_offset_arg, mips_cgc_count_tls_arg): Replace
	with...
	(mips_cgc_traverse_got_arg): ...this new structure.
	(mips_cgc_count_local_tls_relocs): Delete.
	(mips_cgc_count_global_tls_relocs): Likewise.
	(mips_cgc_count_got_entry): New function.
	(mips_cgc_count_local_got_entries): Likewise.
	(mips_cgc_count_global_tls_entries): Take a mips_cgc_traverse_got_arg
	rather than a mips_cgc_count_tls_arg.  Count both relocs and entries.
	(mips_cgc_record_local_got_symbol): Don't count got entries here.
	(mips_cgc_make_got_per_bfd): Use mips_cgc_count_got_entry.
	(mips_cgc_set_global_got_offset): Split into...
	(mips_cgc_set_global_got_area, mips_cgc_set_global_gotidx): ...these
	new functions.  Take a mips_cgc_traverse_got_arg rather than a
	mips_cgc_set_global_got_offset_arg.  Don't count TLS relocs here.
	Use g->relocs to record the number of relocs needed for global GOT
	entries.
	(mips_cgc_multi_got): Use mips_cgc_traverse_got_arg rather than
	mips_cgc_set_global_got_offset_arg.  Use the relocs field to count
	relocations.  Update for above function split.
	(mips_cgc_lay_out_got): Use mips_cgc_count_local_got_entries
	to count both the number of GOT entries and the number of TLS
	relocs required by local entries.  Likewise
	mips_cgc_count_global_tls_entries and global entries.
	Remove uses of mips_cgc_count_local_tls_relocs and
	mips_cgc_count_global_tls_relocs.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_entry): Update comment above tls_type entry
	to say that each structure represents only one type of TLS reference.
	(GOT_TLS_TYPE): New define.
	(mips_cgc_link_hash_entry): Temporarily split tls_type and
	tls_got_offset into two variables each.
	(mips_cgc_link_hash_newfunc): Update accordingly.
	(mips_cgc_got_entry_eq, mips_cgc_got_entry_hash)
	(mips_cgc_multi_got_entry_eq): Require the tls_type to be the same.
	(mips_cgc_reloc_tls_type, mips_tls_got_entries): New functions.
	(mips_tls_got_relocs): Use a switch statement.
	(mips_cgc_count_global_tls_entries): Handle the new hash entry fields.
	(mips_cgc_initialize_tls_slots): Use a switch statement.  Avoid
	local "offset" variable.
	(mips_tls_got_index): Remove r_type argument and assert.  Remove
	code that handled entries with two TLS types; always use the
	original got_index instead.
	(mips_tls_single_got_index): New function.
	(mips_cgc_local_got_index): Use entry->tls_type to check for
	TLS entries.  Use mips_tls_single_got_index.  Update call to
	mips_tls_got_index.
	(mips_cgc_global_got_index): Use mips_cgc_reloc_tls_type.
	Use p->tls_type to check for TLS entries.  Update call to
	mips_tls_got_index.  Use mips_tls_single_got_index.
	(mips_cgc_create_local_got_entry): Use mips_cgc_reloc_tls_type.
	Use entry.tls_type to check for TLS entries.
	(mips_cgc_record_global_got_symbol): Replace tls_flag argument
	with r_type argument.  Use mips_cgc_reloc_tls_type.
	Set up the new hash entry fields.
	(mips_cgc_record_local_got_symbol): Replace tls_flag argument
	with r_type argument.  Use mips_cgc_reloc_tls_type and
	mips_tls_got_entries.  Remove code that handled entries
	with multiple TLS types.
	(mips_cgc_make_got_per_bfd): Use mips_tls_got_entries.
	(mips_cgc_initialize_tls_index): Handle new hash entry fields.
	Use equality rather than masks when checking for specific TLS types.
	Use mips_tls_got_entries.  Remove code that handled entries
	with multiple TLS types.
	(mips_cgc_calculate_relocation): Use TLS_RELOC_P instead of
	testing the hash table entry.
	(_bfd_mips_cgc_check_relocs): Update calls to
	mips_cgc_record_global_got_symbol and mips_cgc_record_local_got_symbol.
	(_bfd_mips_cgc_finish_dynamic_symbol): Don't check h->type.
	(_bfd_mips_cgc_copy_indirect_symbol): Handle new hash entry fields.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_multi_got_entry_hash): Rename to...
	(mips_cgc_got_entry_hash): ...this, deleting the old version.
	(mips_cgc_create_got_info): Use mips_cgc_got_entry_hash for
	both types of GOT.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_create_got_info): New function.
	(mips_cgc_get_got_for_bfd, mips_cgc_multi_got): Use it.
	(mips_cgc_create_got_section): Likewise.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_record_local_got_symbol): Always set
	gotidx to -1.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_multi_got): Simplify size calculation.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_got_info): Move global_gotsym to...
	(mips_cgc_link_hash_table): ...here.  Update rest of file accordingly.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_count_global_tls_entries)
	(mips_cgc_count_global_tls_relocs): Don't count indirect or
	warning symbols.
	(mips_cgc_multi_got, mips_cgc_lay_out_got): Assert that the right
	number of TLS entries were allocated.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_sort_hash_table_f): Remove asserts.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_merge_got_with): Only use arg->global_count
	if there are TLS relocations.

2013-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	* cgcxx-mips.c (mips_cgc_recreate_got): Remove free.
	(mips_cgc_resolve_final_got_entries): Remove bogus comment.

2013-02-11  Alan Modra  <amodra@gmail.com>

	* cgccode.h (cgc_checksum_contents): Free contents.
	* cgc-bfd.h (_bfd_cgc_link_hash_table_free): Declare.
	* cgclink.c (_bfd_cgc_link_hash_table_free): New function.
	(cgc_final_link_free): New function, extracted from..
	(bfd_cgc_final_link): ..here.  Always call
	_bfd_cgc_write_section_eh_frame_hdr.
	* cgcxx-target.h (bfd_cgcNN_bfd_link_hash_table_free): Default to
	_bfd_cgc_link_hash_table_free.
	* libbfd-in.h (_bfd_merge_sections_free): Declare.
	* libbfd.h: Regenerate.
	* merge.c (_bfd_merge_sections_free): New function.
	* cgc-eh-frame.c (_bfd_cgc_write_section_eh_frame_hdr): Free
	hdr_info->array.
	* cgc-m10300.c (cgc32_mn10300_link_hash_table_free): Call
	_bfd_cgc_link_hash_table_free.
	* cgc32-arm.c (cgc32_arm_link_hash_table_free): Likewise.
	* cgc32-avr.c (cgc32_avr_link_hash_table_free): Likewise.
	* cgc32-hppa.c (cgc32_hppa_link_hash_table_free): Likewise.
	* cgc32-i386.c (cgc_i386_link_hash_table_free): Likewise.
	* cgc32-m68hc1x.c (m68hc11_cgc_hash_table_free): Likewise.
	* cgc32-m68k.c (cgc_m68k_link_hash_table_free): Likewise.
	* cgc32-metag.c (cgc_metag_link_hash_table_free): Likewise.
	* cgc32-xgate.c (xgate_cgc_bfd_link_hash_table_free): Likewise.
	* cgc64-aarch64.c (cgc64_aarch64_link_hash_table_free): Likewise.
	* cgc64-ia64-vms.c (cgc64_ia64_hash_table_free): Likewise.
	* cgc64-ppc.c (ppc64_cgc_link_hash_table_free): Likewise.
	* cgc64-x86-64.c (cgc_x86_64_link_hash_table_free): Likewise.
	* cgcnn-ia64.c (cgcNN_ia64_hash_table_free): Likewise.
	* cgc32-cr16.c (cgc32_cr16_link_hash_table_free): Delete.
	(bfd_cgc32_bfd_link_hash_table_free): Don't define.
	* cgc32-tic6x.c (cgc32_tic6x_link_hash_table_free): Delete.
	(bfd_cgc32_bfd_link_hash_table_free): Dont' define.

2013-02-10  Alan Modra  <amodra@gmail.com>

	* coff-arm.c (coff_arm_link_hash_table_create): Use bfd_zmalloc.
	* coff-h8300.c (h8300_coff_link_hash_table_create): Likewise.
	* m68klinux.c (linux_link_hash_table_create): Likewise.
	* sparclinux.c (linux_link_hash_table_create): Likewise.
	* sunos.c (sunos_link_hash_table_create): Likewise.
	* xcofflink.c (_bfd_xcoff_bfd_link_hash_table_create): Likewise.
	* cgc-m10300.c (cgc32_mn10300_link_hash_table_create): Likewise.
	* cgc32-arm.c (cgc32_arm_link_hash_table_create): Likewise.
	* cgc32-avr.c (cgc32_avr_link_hash_table_create): Likewise.
	* cgc32-cr16.c (cgc32_cr16_link_hash_table_create): Likewise.
	* cgc32-cris.c (cgc_cris_link_hash_table_create): Likewise.
	* cgc32-hppa.c (cgc32_hppa_link_hash_table_create): Likewise.
	* cgc32-i386.c (cgc_i386_link_hash_table_create): Likewise.
	* cgc32-lm32.c (lm32_cgc_link_hash_table_create): Likewise.
	* cgc32-m32r.c (m32r_cgc_link_hash_table_create): Likewise.
	* cgc32-m68hc1x.c (m68hc11_cgc_hash_table_create): Likewise.
	* cgc32-m68k.c (cgc_m68k_link_hash_table_create): Likewise.
	* cgc32-metag.c (cgc_metag_link_hash_table_create): Likewise.
	* cgc32-nios2.c (nios2_cgc32_link_hash_table_create): Likewise.
	* cgc32-s390.c (cgc_s390_link_hash_table_create): Likewise.
	* cgc32-score.c (cgc32_score_link_hash_table_create): Likewise.
	* cgc32-spu.c (spu_cgc_link_hash_table_create): Likewise.
	* cgc32-tic6x.c (cgc32_tic6x_link_hash_table_create): Likewise.
	* cgc32-vax.c (cgc_vax_link_hash_table_create): Likewise.
	* cgc32-xgate.c (xgate_cgc_bfd_link_hash_table_create): Likewise.
	* cgc32-xtensa.c (cgc_xtensa_link_hash_table_create): Likewise.
	* cgc64-aarch64.c (cgc64_aarch64_link_hash_table_create): Likewise.
	* cgc64-s390.c (cgc_s390_link_hash_table_create): Likewise.
	* cgc64-sh64.c (sh64_cgc64_link_hash_table_create): Likewise.
	* cgc64-x86-64.c (cgc_x86_64_link_hash_table_create): Likewise.
	* cgcxx-mips.c (_bfd_mips_cgc_link_hash_table_create): Likewise.
	* cgclink.c (_bfd_cgc_link_hash_table_create): Likewise.
	(_bfd_cgc_link_hash_table_init): Assume zero fill table on entry.

2013-02-10  Alan Modra  <amodra@gmail.com>

	* i386linux.c (linux_link_hash_table_create): Allocate table
	with bfd_zmalloc, not bfd_alloc.
	* pdp11.c (link_hash_table_create): Allocate table with
	bfd_malloc, not bfd_alloc.
	* cgc32-bfin.c (bfinfdpic_cgc_link_hash_table_create): Allocate table
	with bfd_zmalloc, not bfd_zalloc.
	(bfin_link_hash_table_create): Likewise.
	* cgc32-frv.c (frvfdpic_cgc_link_hash_table_create): Likewise.
	* cgc64-hppa.c (cgc64_hppa_hash_table_create): Likewise.

2013-02-10  Alan Modra  <amodra@gmail.com>

	PR ld/15113
	* cgc32-sh.c (sh_cgc_link_hash_table_create): Use bfd_zmalloc.

2013-02-08  Markos Chandras  <markos.chandras@imgtec.com>

	* cgc32-metag.c: Use bfd_get_linker_section to get SEC_LINKER_CREATED
	sections.
	(cgc_metag_adjust_dynamic_symbol): Don't error on zero size dynbss
	symbol.

2013-02-08  Yufeng Zhang  <yufeng.zhang@arm.com>

	* cgc64-aarch64.c (cgc64_aarch64_grok_prstatus): Change 'size' from
	288 to 272.

2013-02-08  Alan Modra  <amodra@gmail.com>

	PR binutils/15106
	* cgc-bfd.h (struct cgc_obj_tdata): Add cgc_find_function_cache.
	* cgc.c (cgc_find_function): Revert last change.  Use new
	tdata field rather than static vars for cache.

2013-02-07  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/15107
	* cgclink.c (cgc_link_output_extsym): Set STB_GNU_UNIQUE only if
	symbol is defined in regular object.

2013-02-07  Roberto Agostino Vitillo  <ra.vitillo@gmail.com>

	PR binutils/15106
	* cgc.c (cgc_find_function): Don't cache if symbols change.

2013-02-07  Alan Modra  <amodra@gmail.com>

	PR binutils/14873
	* cgc-attrs.c (_bfd_cgc_copy_obj_attributes): Don't attempt to
	copy attributes from or to non-CGC.

2013-02-06  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc32-i386.c (cgc_i386_allocate_dynrelocs): Don't clear pc_count
	for non-zero TLS symbol.
	(cgc_i386_relocate_section): Don't resolve size relocation against
	non-zero TLS symbol.
	* cgc64-x86-64.c (cgc_x86_64_allocate_dynrelocs): Don't clear
	pc_count for non-zero TLS symbol.
	(cgc_x86_64_relocate_section): Don't resolve size relocation
	against non-zero TLS symbol.

2013-02-06  Sandra Loosemore  <sandra@codesourcery.com>
	    Andrew Jenner <andrew@codesourcery.com>

	Based on patches from Altera Corporation.

	* Makefile.am (ALL_MACHINES): Add cpu-nios2.lo.
	(ALL_MACHINES_CFILES): Add cpu-nios2.c.
	(BFD_BACKENDS): Add cgc32-nios2.lo.
	(BFD32_BACKENDS_CFILES): Add cgc32-nios2.c.
	* Makefile.in: Regenerated.
	* configure.in: Add entries for bfd_cgc32_bignios2_vec and
	bfd_cgc32_littlenios2_vec.
	* configure: Regenerated.
	* config.bfd: Add cases for nios2.
	* archures.c (enum bfd_architecture): Add bfd_arch_nios2.
	(bfd_mach_nios2): Define.
	(bfd_nios2_arch): Declare.
	(bfd_archures_list): Add bfd_nios2_arch.
	* targets.c (bfd_cgc32_bignios2_vec): Declare.
	(bfd_cgc32_littlenios2_vec): Declare.
	(_bfd_target_vector): Add entries for bfd_cgc32_bignios2_vec and
	bfd_cgc32_littlenios2_vec.
	* cgc-bfd.h (enum cgc_target_id): Add NIOS2_CGC_DATA.
	* reloc.c (enum bfd_reloc_code_real): Add Nios II relocations.
	* bfd-in2.h: Regenerated.
	* libbfd.h: Regenerated.
	* cpu-nios2.c: New file.
	* cgc32-nios2.c: New file.

2013-02-06  Alan Modra  <amodra@gmail.com>

	* cgc32-arm.c (cgc32_arm_final_link_relocate): Only test for
	stubs in stub_bfd.

2013-02-06  Alan Modra  <amodra@gmail.com>

	* Makefile.am (SOURCE_HFILES): Add `cgc-linux-psinfo.h'.
	* Makefile.in: Regenerate.

2013-02-04  Sergio Durigan Junior  <sergiodj@redhat.com>
	    Pedro Alves  <palves@redhat.com>

	* Makefile.in (SOURCE_HFILES): Add `cgc-linux-psinfo.h'.
	* cgc-bfd.h (cgc_internal_linux_prpsinfo): New structure
	declaration.
	(cgccore_write_linux_prpsinfo32, cgccore_write_linux_prpsinfo64)
	(cgccore_write_ppc32_linux_prpsinfo32): New declarations.
	* cgc-linux-psinfo.h: New file.
	* cgc.c: Include cgc-linux-psinfo.h.
	(cgccore_write_linux_prpsinfo32, cgccore_write_linux_prpsinfo64):
	New functions.
	* cgc32-ppc.c: Include `cgc-linux-psinfo.h'.
	(cgc_external_ppc_linux_prpsinfo32): New structure declaration.
	(PPC_LINUX_PRPSINFO32_SWAP_FIELDS): New macro.
	(cgccore_write_ppc_linux_prpsinfo32): New function.

2013-02-04  Tristan Gingold  <gingold@adacore.com>

	* mach-o.c (bfd_mach_o_scan_start_address): Do not fail if no
	start address.

2013-02-04  Alan Modra  <amodra@gmail.com>

	* Makefile.am (BFD64_BACKENDS): Remove cgc-nacl.lo.
	(BFD64_BACKENDS_CFILES): Remove cgc-nacl.c.
	* Makefile.in: Regenerate.
	* po/SRC-POTFILES.in: Regenerate.

2013-02-04  Alan Modra  <amodra@gmail.com>

	* coff-tic54x.c (SWAP_OUT_RELOC_EXTRA): Delete.
	* coff-tic80.c (SWAP_OUT_RELOC_EXTRA): Delete.

2013-02-01  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (dec_dynrel_count): Don't error when cgc_gc_sweep_symbol
	clears def_regular.

2013-01-31  Tristan Gingold  <gingold@adacore.com>

	* mach-o.c (bfd_mach_o_scan): Call bfd_mach_o_flatten_sections
	earlier.  Fix status checking of bfd_mach_o_scan_start_address.
	(bfd_mach_o_scan_start_address): Handle LC_MAIN.

2013-01-31  Alan Modra  <amodra@gmail.com>
	    David S. Miller  <davem@davemloft.net>

	PR ld/15056
	* cgcxx-sparc.c (_bfd_sparc_cgc_gc_mark_hook): Handle implicit
	references to __tls_get_addr.
	* cgc32-tilpro.c (tilepro_cgc_gc_mark_hook): Likewise.  Correct
	vtinherit and vtentry reloc handling too.
	* cgcxx-tilegx.c (tilegx_cgc_gc_mark_hook): As for tilepro.

2013-01-31  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (ppc_stub_name): Trim off trailing "+0".

2013-01-31  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (build_plt_stub): Correct plt stub branch to glink.

2013-01-28  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c: Use %T to print symbols names and remove redundant
	"relocation" in error messages throughout file.
	(ppc64_cgc_relocate_section): Remove sibling call error message,
	replace with "call lacks nop".  Specially report errors for
	branches to function entry points via OPD lookup and branches
	to stubs.  Remove NULL symbol handling now done by %T.

2013-01-28  Alan Modra  <amodra@gmail.com>

	* archive.c (bfd_generic_archive_p): Return target and keep
	ardata on partial matches.
	* format.c (bfd_check_format_matches): Adjust for above
	change.  Remove bfd_error_file_ambiguously_recognized dead
	code.

2013-01-26  Alan Modra  <amodra@gmail.com>

	* bfd.c (struct bfd_preserve, bfd_preserve_save, bfd_preserve_restore,
	bfd_preserve_finish): Move to..
	* format.c: ..here, splitting out..
	(bfd_reinit): ..this.  New function.
	(bfd_check_format_matches): Use bfd_preserve_save/restore to
	keep bfd state for a match.
	* cgccode.h (cgc_object_p): Don't use bfd_preserve_save/restore.
	* cgccore.h (cgc_core_file_p): Likewise.
	* mach-o.c (bfd_mach_o_header_p): Likewise.
	* pef.c (bfd_pef_object_p, bfd_pef_xlib_object_p): Likewise.
	* xsym.c (bfd_sym_object_p): Likewise.
	* mmo.c (mmo_scan): Clear abfd->symcount.
	* opncls.c (_bfd_new_bfd): Use a smaller section hash table.
	* section.c (bfd_section_list_clear): Clear section_htab.count.
	* bfd-in2.h: Regenerate.

2013-01-25  Michael Schewe  <michael.schewe@gmx.net>

	* cgc32-h8300.c (cgc32_h8_relax_section): When checking for a
	second reloc, make sure that the reloc potentially exists first.

2013-01-24  Nick Clifton  <nickc@redhat.com>

	* archures.c: Add bfd_mach_v850e3v5.
	* bfd-in2.h: Regenerate.
	* cpu-v850.c: Add entries for v850e2v5 and v850e3v5.
	* cpu-v850_rh850.c: Likewise.
	* cgc32-v850.c: Add support for v850e3v5 architecture.

2013-01-23  Markos Chandras  <markos.chandras@imgtec.com>

	* cgc32-metag.c: Error on HIADDR16/LOADDR16 in shared link.

2013-01-23  Leif Ekblad  <leif@rdos.net>

	* config.bfd (x86_64-*-rdos*): Remove targ_selvecs.

2013-01-18  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc32-i386.c (cgc_i386_allocate_dynrelocs): Clear pc_count for
	non-zero TLS symbol.
	(cgc_i386_relocate_section): Resolve size relocation against
	non-zero TLS symbol.
	* cgc64-x86-64.c (cgc_x86_64_allocate_dynrelocs): Clear pc_count
	for non-zero TLS symbol.
	(cgc_x86_64_relocate_section): Resolve size relocation against
	non-zero TLS symbol.

2013-01-18  Mike Frysinger  <vapier@gentoo.org>

	* cgclink.c (bfd_cgc_size_dynamic_sections): Only add DT_RPATH
	when new_dtags is false.  Only add DT_RUNPATH when new_dtags is
	true.

2013-01-17  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc32-i386.c (cgc_i386_check_relocs): Count size relocation as
	PC-relative relocation.
	* cgc64-x86-64.c (cgc_x86_64_check_relocs): Count size relocation
	as PC-relative relocation.

2013-01-16  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc32-i386.c (cgc_i386_check_relocs): Update R_386_SIZE32
	check.
	(cgc_i386_relocate_section): Don't check TLS for R_386_SIZE32.

	* cgc64-x86-64.c (cgc_x86_64_check_relocs): Update R_X86_64_SIZE32
	and R_X86_64_SIZE64 check.
	(cgc_x86_64_relocate_section): Don't check TLS for R_X86_64_SIZE32
	nor R_X86_64_SIZE64.

2013-01-16  H.J. Lu  <hongjiu.lu@intel.com>

	* bfd-in2.h: Regenerated.
	* libbfd.h: Likewise.

	* cgc32-i386.c (cgc_howto_table): Fill R_386_SIZE32 entry.
	(cgc_i386_reloc_type_lookup): Support BFD_RELOC_SIZE32.
	(cgc_i386_check_relocs): Handle R_386_SIZE32.
	(cgc_i386_gc_sweep_hook): Likewise.
	(cgc_i386_relocate_section): Likewise.

	* cgc64-x86-64.c (x86_64_cgc_howto_table): Fill R_X86_64_SIZE32
	and R_X86_64_SIZE64 entries.
	(x86_64_reloc_map): Add BFD_RELOC_SIZE32 and BFD_RELOC_SIZE64,
	(cgc_x86_64_rtype_to_howto): Handle R_X86_64_SIZE32 for x32.
	(cgc_x86_64_reloc_name_lookup): Likewise.
	(cgc_x86_64_check_relocs): Handle R_X86_64_SIZE32 and
	R_X86_64_SIZE64.
	(cgc_x86_64_gc_sweep_hook): Likewise.
	(cgc_x86_64_relocate_section): Likewise.

	* reloc.c (bfd_reloc_code_type): Add BFD_RELOC_SIZE32 and
	BFD_RELOC_SIZE64.

2013-01-15  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc64-x86-64.c (R_X86_64_standard): Replace R_X86_64_IRELATIVE
	with R_X86_64_RELATIVE64.

2013-01-15  Nick Clifton  <nickc@redhat.com>

	* cgc32-msp430.c: Fix spelling typo.

2013-01-15  Alan Modra  <amodra@gmail.com>

	* cgc64-ppc.c (ppc64_cgc_size_stubs): Default shared libs to
	plt-thread-safe.

2013-01-14  Alan Modra  <amodra@gmail.com>

	PR binutils/14813
	* bfdio.c (struct bfd_iovec <bclose>): Revert 2012-11-06.
	(memory_bclose): Likewise.  Return 0 on success.
	* cache.c (cache_bclose): Likewise.
	* opncls.c (opncls_bclose, bfd_close): Likewise.
	* vms-lib.c (vms_lib_bclose): Likewise.
	* libbfd.h: Regenerate.

2013-01-13  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (struct cgc_link_hash_entry): Delete dynamic_weak.
	Add ref_dynamic_nonweak.
	* cgclink.c (_bfd_cgc_mark_dynamic_def_weak): Delete.
	(_bfd_cgc_merge_symbol): Don't call above function.  Move
	setting of ref_dynamic_nonweak and dynamic_def earlier.  Don't
	clear dynamic_def.
	(cgc_link_add_object_symbols): Delete redundant "override" test.
	Don't set dynamic_def here.
	(cgc_link_output_extsym): Update.

2013-01-12  H.J. Lu  <hongjiu.lu@intel.com>

	* cgc32-i386.c (cgc_i386_check_relocs): Set bfd errror for
	normal and TLS symbol access.
	* cgc64-x86-64.c (cgc_x86_64_check_relocs): Likewise.

2013-01-12  Alan Modra  <amodra@gmail.com>

	* cgc-bfd.h (_bfd_cgc_strtab_refcount): Declare.
	* cgc-strtab.c (_bfd_cgc_strtab_refcount): New function.
	* cgclink.c (cgc_add_dt_needed_tag): Use _bfd_cgc_strtab_refcount.

2013-01-12  Alan Modra  <amodra@gmail.com>

	PR ld/12549
	* cgc-bfd.h (_bfd_cgc_strtab_clear_refs): Declare.
	(_bfd_cgc_strtab_clear_all_refs): Define.
	* cgc-strtab.c (_bfd_cgc_strtab_clear_refs): New function.
	(_bfd_cgc_strtab_clear_all_refs): Delete.
	* cgclink.c (cgc_link_add_object_symbols): Clear out added
	strtab refs.  Correct handling of warning common symbols.

2013-01-10  H.J. Lu  <hongjiu.lu@intel.com>

	* aout0.c: Remove trailing white spaces.
	* archive.c: Likewise.
	* archures.c: Likewise.
	* bfd-in.h: Likewise.
	* bfd-in2.h: Likewise.
	* coff-alpha.c: Likewise.
	* coff-i860.c: Likewise.
	* coff-mips.c: Likewise.
	* coff-ppc.c: Likewise.
	* coff-tic80.c: Likewise.
	* coff-x86_64.c: Likewise.
	* coff-z80.c: Likewise.
	* coffcode.h: Likewise.
	* coffgen.c: Likewise.
	* cofflink.c: Likewise.
	* compress.c: Likewise.
	* corefile.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-i386.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* dwarf2.c: Likewise.
	* ecofflink.c: Likewise.
	* ecoffswap.h: Likewise.
	* cgc-ifunc.c: Likewise.
	* cgc-m10300.c: Likewise.
	* cgc-vxworks.c: Likewise.
	* cgc32-avr.c: Likewise.
	* cgc32-avr.h: Likewise.
	* cgc32-cr16.c: Likewise.
	* cgc32-cr16c.c: Likewise.
	* cgc32-cris.c: Likewise.
	* cgc32-crx.c: Likewise.
	* cgc32-frv.c: Likewise.
	* cgc32-hppa.c: Likewise.
	* cgc32-i860.c: Likewise.
	* cgc32-ip2k.c: Likewise.
	* cgc32-iq2000.c: Likewise.
	* cgc32-m32c.c: Likewise.
	* cgc32-m68hc1x.c: Likewise.
	* cgc32-msp430.c: Likewise.
	* cgc32-mt.c: Likewise.
	* cgc32-ppc.c: Likewise.
	* cgc32-rl78.c: Likewise.
	* cgc32-s390.c: Likewise.
	* cgc32-score.h: Likewise.
	* cgc32-sh-symbian.c: Likewise.
	* cgc32-sh.c: Likewise.
	* cgc32-spu.c: Likewise.
	* cgc32-tic6x.c: Likewise.
	* cgc32-v850.c: Likewise.
	* cgc32-xc16x.c: Likewise.
	* cgc32-xtensa.c: Likewise.
	* cgc64-alpha.c: Likewise.
	* cgc64-hppa.c: Likewise.
	* cgc64-ppc.c: Likewise.
	* cgc64-s390.c: Likewise.
	* cgccore.h: Likewise.
	* cgclink.c: Likewise.
	* cgcxx-mips.c: Likewise.
	* cgcxx-sparc.c: Likewise.
	* cgcxx-tilegx.c: Likewise.
	* ieee.c: Likewise.
	* libcoff.h: Likewise.
	* libpei.h: Likewise.
	* libxcoff.h: Likewise.
	* linker.c: Likewise.
	* mach-o-i386.c: Likewise.
	* mach-o-target.c: Likewise.
	* mach-o.c: Likewise.
	* mach-o.h: Likewise.
	* mmo.c: Likewise.
	* opncls.c: Likewise.
	* pdp11.c: Likewise.
	* pe-x86_64.c: Likewise.
	* peXXigen.c: Likewise.
	* pef-traceback.h: Likewise.
	* pei-x86_64.c: Likewise.
	* peicode.h: Likewise.
	* plugin.c: Likewise.
	* reloc.c: Likewise.
	* riscix.c: Likewise.
	* section.c: Likewise.
	* som.c: Likewise.
	* syms.c: Likewise.
	* tekhex.c: Likewise.
	* ticoff.h: Likewise.
	* vaxbsd.c: Likewise.
	* xcofflink.c: Likewise.
	* xtensa-isa.c: Likewise.

2013-01-10  Will Newton <will.newton@imgtec.com>

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* archures.c (bfd_mach_metag): New.
	* bfd-in2.h: Regenerate.
	* config.bfd: Add Meta.
	* configure: Regenerate.
	* configure.in: Add Meta.
	* cpu-metag.c: New file.
	* cgc-bfd.h: Add Meta.
	* cgc32-metag.c: New file.
	* cgc32-metag.h: New file.
	* libbfd.h: Regenerate.
	* reloc.c: Add Meta relocations.
	* targets.c: Add Meta.

2013-01-08  Yufeng Zhang  <yufeng.zhang@arm.com>

	* cgc-bfd.h (cgccore_write_aarch_tls): Add prototype.
	(cgccore_write_aarch_hw_break): Likewise.
	(cgccore_write_aarch_hw_watch): Likewise.
	* cgc.c (cgccore_grok_aarch_tls): New function.
	(cgccore_grok_aarch_hw_break): Likewise.
	(cgccore_grok_aarch_hw_watch): Likewise.
	(cgccore_grok_note): Call the new functions to handle the
	corresponding notes.
	(cgccore_write_aarch_tls): New function.
	(cgccore_write_aarch_hw_break): Likewise.
	(cgccore_write_aarch_hw_watch): Likewise.
	(cgccore_write_register_note): Call the new functions to handle the
	corresponding pseudo sections.

2013-01-07  Tom Tromey  <tromey@redhat.com>

	* section.c (_bfd_std_section): Rename from std_section.
	(bfd_com_section_ptr, bfd_und_section_ptr, bfd_abs_section_ptr)
	(STD_SECTION): Update.
	* bfd-in2.h: Rebuild.

2013-01-04  Juergen Urban <JuergenUrban@gmx.de>

	* archures.c (bfd_mach_mips5900): Define.
	* bfd-in2.h: Regenerate.
	* config.bfd: Add mips64-ps2-cgc and mips-ps2-cgc targets.
	* cpu-mips.c: Add support for MIPS r5900.
	* cgcxx-mips.c: Add support for MIPS r5900 (extension of r4000).

2013-01-03  Nickolai Zeldovich  <nickolai@csail.mit.edu>
	    Nick Clifton  <nickc@redhat.com>

	* cgclink.c (get_value): Prevent the use of an undefined shift
	operation.  Add sanity checks.

2013-01-02  Kaushik Phatak  <kaushik.phatak@kpitcummins.com>

	* config.bfd (cr16*-*-uclinux*): New target support.


For older changes see ChangeLog-2012

Copyright (C) 2013 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
